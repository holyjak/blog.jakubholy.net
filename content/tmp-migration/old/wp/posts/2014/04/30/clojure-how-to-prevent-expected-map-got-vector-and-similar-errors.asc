{:title
 "Clojure: How To Prevent \"Expected Map, Got Vector\" And Similar Errors",
 :date "2014-04-30",
 :layout :post,
 :tags ["clojure"],
 :tags-orig ["clojure"],
 :categories ["Languages"],
 :extra-css
 #{"https://github.githubassets.com/assets/gist-embed-123720f37c57ce9a8f29de081c38ed61.css"}
}

++++
What my Clojure code is doing most of the time is transforming data. Yet I cannot see the shape of data being transformed - I have to know what the data looks like on the input and hold a mental model of how they change at each step. But I make mistakes. I make mistakes in my code so that the data does not correspond anymore to the model it should follow. And I make mistakes in my mental model of what the data currently looks like, leading likely to a code error later on. The end result is the same - a little helpful exception <em>at some later step</em> regarding wrong shape of data. There are two problems here: The error typically provides too little useful information and it usually manifests later than where the code/model mistake actually is. I therefore easily spend an hour or more troubleshooting these mistakes. In addition to that, it is also hard to read such code because a reader lacks the writer's mental model of the data and has to derive it herself - which is quite hard especially if the shape of the input data is not clear in the first place.<br><br>I should mention that I of course write tests and experiment in the REPL but I still hit these problems so it is not enough for me. Tests cannot protect me from having a wrong model of the input data (since I write the [unit] tests based on the same assumptions as the code and only discover the error when I integrate all the bits) and even if they help to discover an error, it is still time-consuming the root cause.<br><br>Can I do better? I believe I can.<br><br><!--more--><br><br>The hard to troubleshoot errors with delayed manifestation and hard to understand code that communicates only half of the story (the transformations but not the shape of the data being transformed) is the price we pay for the power of dynamic typing. But there are strategies to lower this price. I want to present three of them: small, focused functions with good names, destructuring as documentation, and judicious use of pre- and post- conditions.<br><br>The content of this post is based on what I learned from Ulises Cervi√±o Beresi during one of the free <a href="https://groups.google.com/forum/#!searchin/clojure/Clojure$20Office$20Hours/clojure/kYzh_wAZM8c/lVJf1PnrxiYJ">Clojure Office Hours</a> he generously <a href="https://ucb.youcanbook.me/">offers</a>, similarly to <a href="https://leifpoorman.youcanbook.me/">Leif</a> in the US.<br><br>So we need to make the shape of data more obvious and to fail fast, preferably with a helpful error message.<br><br>The main idea is:<br><br><ol>
    <li>Break transformations into small, simple functions with clear names</li>
    <li>Use destructuring in function arguments to document what data is expected</li>
    <li>Use pre- and post-conditions (and/or asserts) both as checks and documentation</li>
    <li>(All the testing and interactive exploration in REPL that you already do.)</li>
</ol><br><br><h3>A simplified example</h3><br><br>We have a webshop that sells discounted cars. We also have occasional campaigns with increased discounts for selected cars. For each car we have also a number of keywords people can use to find it and categories it belongs to. Below is code that processes raw car + campaigns + search keywords data from a DB query, first the original and then the refactored one with checks:<div id="gist11456518" class="gist">
    <div class="gist-file">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-cars-simplified-original-clj" class="file">
    

  <div itemprop="text" class="Box-body p-0 blob-wrapper data type-clojure ">
      
<table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-cars-simplified-original-clj-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-cars-simplified-original-clj-LC1" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">require</span> &#39;[cheshire.core <span class="pl-c1">:refer</span> [parse-string]])</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-cars-simplified-original-clj-LC2" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-cars-simplified-original-clj-LC3" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn-</span> <span class="pl-e">json-&gt;data</span> [key m]</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-cars-simplified-original-clj-LC4" class="blob-code blob-code-inner js-file-line">  (<span class="pl-en">update-in</span> m [key] #(<span class="pl-en">parse-string</span> % <span class="pl-c1">true</span>)))</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-cars-simplified-original-clj-LC5" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-cars-simplified-original-clj-LC6" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn-</span> <span class="pl-e">select-campaign</span> [car+campaigns]</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-cars-simplified-original-clj-LC7" class="blob-code blob-code-inner js-file-line">  (<span class="pl-en">first</span> car+campaigns))</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-cars-simplified-original-clj-LC8" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="file-cars-simplified-original-clj-LC9" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn-</span> <span class="pl-e">jdbc-array-to-set</span></td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="file-cars-simplified-original-clj-LC10" class="blob-code blob-code-inner js-file-line">  [key m]</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="file-cars-simplified-original-clj-LC11" class="blob-code blob-code-inner js-file-line">  (<span class="pl-en">update-in</span> m [key] #(<span class="pl-en">apply</span> hash-set (<span class="pl-en">.getArray</span> %))))</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="file-cars-simplified-original-clj-LC12" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="file-cars-simplified-original-clj-LC13" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn</span> <span class="pl-e">refine-cars-simple</span></td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="file-cars-simplified-original-clj-LC14" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&quot;</span>Process get-cars query result set - derive additional data, transform values into better ones</span></td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="file-cars-simplified-original-clj-LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-s">   There is one row per car and campaign, a car may have more campaigns - we pick the best one.</span></td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="file-cars-simplified-original-clj-LC16" class="blob-code blob-code-inner js-file-line"><span class="pl-s">  <span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="file-cars-simplified-original-clj-LC17" class="blob-code blob-code-inner js-file-line">  [cars-raw]</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="file-cars-simplified-original-clj-LC18" class="blob-code blob-code-inner js-file-line">  (<span class="pl-en">-&gt;&gt;</span></td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="file-cars-simplified-original-clj-LC19" class="blob-code blob-code-inner js-file-line">   cars-raw</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="file-cars-simplified-original-clj-LC20" class="blob-code blob-code-inner js-file-line">   (<span class="pl-en">map</span> (<span class="pl-en">partial</span> json-&gt;data <span class="pl-c1">:json</span>)) <span class="pl-c"><span class="pl-c">;</span>; &lt;- this I originally forgot</span></td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="file-cars-simplified-original-clj-LC21" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">;</span>; group rows for the same car =&gt; [[car1 ..][car2 ..]]</span></td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="file-cars-simplified-original-clj-LC22" class="blob-code blob-code-inner js-file-line">   (<span class="pl-en">group-by</span> <span class="pl-c1">:id</span>)</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="file-cars-simplified-original-clj-LC23" class="blob-code blob-code-inner js-file-line">   (<span class="pl-en">vals</span>)</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="file-cars-simplified-original-clj-LC24" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">;</span>; join all car1 vectors into one car ..</span></td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="file-cars-simplified-original-clj-LC25" class="blob-code blob-code-inner js-file-line">   (<span class="pl-en">map</span> select-campaign)</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="file-cars-simplified-original-clj-LC26" class="blob-code blob-code-inner js-file-line">   (<span class="pl-en">map</span> (<span class="pl-k">fn</span> [car]</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="file-cars-simplified-original-clj-LC27" class="blob-code blob-code-inner js-file-line">          (<span class="pl-en">-&gt;&gt;</span></td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="file-cars-simplified-original-clj-LC28" class="blob-code blob-code-inner js-file-line">           car</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="file-cars-simplified-original-clj-LC29" class="blob-code blob-code-inner js-file-line">           (<span class="pl-en">jdbc-array-to-set</span> <span class="pl-c1">:category_ref</span>)</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-original-clj-L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="file-cars-simplified-original-clj-LC30" class="blob-code blob-code-inner js-file-line">           (<span class="pl-en">jdbc-array-to-set</span> <span class="pl-c1">:keywords</span>))))))</td>
      </tr>
</table>


  </div>

  </div>
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/holyjak/74b2c6ea20b25d020c8b/raw/d0cb9753fa3d919e5f3b4f3b569b547804a8ed4d/cars-simplified-original.clj" style="float:right">view raw</a>
        <a href="https://gist.github.com/holyjak/74b2c6ea20b25d020c8b#file-cars-simplified-original-clj">cars-simplified-original.clj</a>
        hosted with &#10084; by <a href="https://github.com">GitHub</a>
      </div>
    </div>
    <div class="gist-file">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-cars-simplified-refactored-clj" class="file">
    

  <div itemprop="text" class="Box-body p-0 blob-wrapper data type-clojure ">
      
<table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-cars-simplified-refactored-clj-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-cars-simplified-refactored-clj-LC1" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">require</span> &#39;[cheshire.core <span class="pl-c1">:refer</span> [parse-string]])</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-cars-simplified-refactored-clj-LC2" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">require</span> &#39;[clojure.set <span class="pl-c1">:refer</span> [subset? difference]])</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-cars-simplified-refactored-clj-LC3" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-cars-simplified-refactored-clj-LC4" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn-</span> <span class="pl-e">car?</span> [{<span class="pl-c1">:keys</span> [id] <span class="pl-c1">:as</span> car}]</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-cars-simplified-refactored-clj-LC5" class="blob-code blob-code-inner js-file-line">  (<span class="pl-en">and</span> (<span class="pl-en">map?</span> car) id))</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-cars-simplified-refactored-clj-LC6" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-cars-simplified-refactored-clj-LC7" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn-</span> <span class="pl-e">json-&gt;data</span> [key m]</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-cars-simplified-refactored-clj-LC8" class="blob-code blob-code-inner js-file-line">  {<span class="pl-c1">:pre</span> [(<span class="pl-en">contains?</span> m key) (<span class="pl-en">string?</span> (<span class="pl-en">get</span> m key))], <span class="pl-c1">:post</span> [(<span class="pl-en">map?</span> (<span class="pl-en">get</span> % key))]}</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="file-cars-simplified-refactored-clj-LC9" class="blob-code blob-code-inner js-file-line">  (<span class="pl-en">update-in</span> m [key] parse-string <span class="pl-c1">true</span>))</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="file-cars-simplified-refactored-clj-LC10" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="file-cars-simplified-refactored-clj-LC11" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn-</span> <span class="pl-e">select-campaign</span> [[first-car <span class="pl-c1">:as</span> all]]</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="file-cars-simplified-refactored-clj-LC12" class="blob-code blob-code-inner js-file-line">  {<span class="pl-c1">:pre</span> [(<span class="pl-en">sequential?</span> all) (<span class="pl-en">car?</span> first-car)], <span class="pl-c1">:post</span> [(<span class="pl-en">car?</span> %)]}</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="file-cars-simplified-refactored-clj-LC13" class="blob-code blob-code-inner js-file-line">  <span class="pl-e">first-car</span>)</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="file-cars-simplified-refactored-clj-LC14" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="file-cars-simplified-refactored-clj-LC15" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn-</span> <span class="pl-e">jdbc-array-to-set</span></td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="file-cars-simplified-refactored-clj-LC16" class="blob-code blob-code-inner js-file-line">  [key m]</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="file-cars-simplified-refactored-clj-LC17" class="blob-code blob-code-inner js-file-line">  {<span class="pl-c1">:pre</span> [(<span class="pl-en">contains?</span> m key) (<span class="pl-en">instance?</span> java.sql.Array (<span class="pl-en">get</span> m key))], <span class="pl-c1">:post</span> [(<span class="pl-en">set?</span> (<span class="pl-en">get</span> % key))]}</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="file-cars-simplified-refactored-clj-LC18" class="blob-code blob-code-inner js-file-line">  (<span class="pl-en">update-in</span> m [key] #(<span class="pl-en">apply</span> hash-set (<span class="pl-en">.getArray</span> %))))</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="file-cars-simplified-refactored-clj-LC19" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="file-cars-simplified-refactored-clj-LC20" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn</span> <span class="pl-e">group-rows-by-car</span> [cars-raw]</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="file-cars-simplified-refactored-clj-LC21" class="blob-code blob-code-inner js-file-line">  {<span class="pl-c1">:pre</span> [(<span class="pl-en">sequential?</span> cars-raw) (<span class="pl-en">car?</span> (<span class="pl-en">first</span> cars-raw))]</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="file-cars-simplified-refactored-clj-LC22" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">:post</span> [(<span class="pl-en">sequential?</span> %) (<span class="pl-en">vector?</span> (<span class="pl-en">first</span> %))]}</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="file-cars-simplified-refactored-clj-LC23" class="blob-code blob-code-inner js-file-line">  (<span class="pl-en">vals</span> (<span class="pl-en">group-by</span> <span class="pl-c1">:id</span> cars-raw)))</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="file-cars-simplified-refactored-clj-LC24" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="file-cars-simplified-refactored-clj-LC25" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn</span> <span class="pl-e">refine-car</span> [car]</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="file-cars-simplified-refactored-clj-LC26" class="blob-code blob-code-inner js-file-line">  {<span class="pl-c1">:pre</span> [(<span class="pl-en">car?</span> car) (<span class="pl-c1">:keywords</span> car) (<span class="pl-c1">:category_ref</span> car)]}</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="file-cars-simplified-refactored-clj-LC27" class="blob-code blob-code-inner js-file-line">  (<span class="pl-en">-&gt;&gt;</span> car</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="file-cars-simplified-refactored-clj-LC28" class="blob-code blob-code-inner js-file-line">    (<span class="pl-en">jdbc-array-to-set</span> <span class="pl-c1">:category_ref</span>)</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="file-cars-simplified-refactored-clj-LC29" class="blob-code blob-code-inner js-file-line">    (<span class="pl-en">jdbc-array-to-set</span> <span class="pl-c1">:keywords</span>)))</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="file-cars-simplified-refactored-clj-LC30" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="file-cars-simplified-refactored-clj-LC31" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn</span> <span class="pl-e">refine-cars-simple</span></td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="file-cars-simplified-refactored-clj-LC32" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&quot;</span>Process get-cars query result set - derive additional data, transform values into better ones</span></td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="file-cars-simplified-refactored-clj-LC33" class="blob-code blob-code-inner js-file-line"><span class="pl-s">   There is one row per car and campaign, a car may have more campaigns - we pick the best one.</span></td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="file-cars-simplified-refactored-clj-LC34" class="blob-code blob-code-inner js-file-line"><span class="pl-s">  <span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="file-cars-simplified-refactored-clj-LC35" class="blob-code blob-code-inner js-file-line">  [cars-raw]</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="file-cars-simplified-refactored-clj-LC36" class="blob-code blob-code-inner js-file-line">  (<span class="pl-en">-&gt;&gt;</span></td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="file-cars-simplified-refactored-clj-LC37" class="blob-code blob-code-inner js-file-line">   cars-raw</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="file-cars-simplified-refactored-clj-LC38" class="blob-code blob-code-inner js-file-line">   (<span class="pl-en">map</span> (<span class="pl-en">partial</span> json-&gt;data <span class="pl-c1">:json</span>)) <span class="pl-c"><span class="pl-c">;</span>; &lt;- this I originally forgot</span></td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="file-cars-simplified-refactored-clj-LC39" class="blob-code blob-code-inner js-file-line">   (<span class="pl-en">group-rows-by-car</span>)</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="file-cars-simplified-refactored-clj-LC40" class="blob-code blob-code-inner js-file-line">   (<span class="pl-en">map</span> select-campaign)</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="file-cars-simplified-refactored-clj-LC41" class="blob-code blob-code-inner js-file-line">   (<span class="pl-en">map</span> refine-car)))</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="file-cars-simplified-refactored-clj-LC42" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="file-cars-simplified-refactored-clj-LC43" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn</span> <span class="pl-e">empty-array</span> [] (<span class="pl-en">reify</span> java.sql.Array (<span class="pl-en">getArray</span> [_] (<span class="pl-en">object-array</span> []))))</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="file-cars-simplified-refactored-clj-LC44" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-simplified-refactored-clj-L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="file-cars-simplified-refactored-clj-LC45" class="blob-code blob-code-inner js-file-line">(<span class="pl-en">refine-cars-simple</span> [{<span class="pl-c1">:id</span> <span class="pl-c1">1</span>, <span class="pl-c1">:json</span> <span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-cce">\&quot;</span>discount<span class="pl-cce">\&quot;</span>:5000}<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">:campaign_discount</span> <span class="pl-c1">3000</span>, <span class="pl-c1">:category_ref</span> (<span class="pl-en">empty-array</span>), <span class="pl-c1">:keywords</span> (<span class="pl-en">empty-array</span>)}])</td>
      </tr>
</table>


  </div>

  </div>
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/holyjak/74b2c6ea20b25d020c8b/raw/d0cb9753fa3d919e5f3b4f3b569b547804a8ed4d/cars-simplified-refactored.clj" style="float:right">view raw</a>
        <a href="https://gist.github.com/holyjak/74b2c6ea20b25d020c8b#file-cars-simplified-refactored-clj">cars-simplified-refactored.clj</a>
        hosted with &#10084; by <a href="https://github.com">GitHub</a>
      </div>
    </div>
</div>
<br><br><h3>A real-world example</h3><br><br>We have a webshop that sells discounted cars. Each car we sell has a base discount (either an absolute amount or percentage) and we also have occasional campaigns for selected cars. For each car we have also a number of keywords people can use to find it.<br><br><h4>Original code</h4><br><br>Below is code that processes raw car + campaigns + search keywords data from a DB query, selected the best applicable campaign and computing the final discount:<div id="gist11431019" class="gist">
    <div class="gist-file">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-cars-original-clj" class="file">
    

  <div itemprop="text" class="Box-body p-0 blob-wrapper data type-clojure ">
      
<table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-cars-original-clj-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-cars-original-clj-LC1" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">require</span> &#39;[cheshire.core <span class="pl-c1">:refer</span> [parse-string]])</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-cars-original-clj-LC2" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-cars-original-clj-LC3" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn</span> <span class="pl-e">db-array</span> [col] (<span class="pl-en">reify</span> java.sql.Array (<span class="pl-en">getArray</span> [_] (<span class="pl-en">object-array</span> col))))</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-cars-original-clj-LC4" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-cars-original-clj-LC5" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn-</span> <span class="pl-e">json-&gt;data</span> [data fields]</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-cars-original-clj-LC6" class="blob-code blob-code-inner js-file-line">  (<span class="pl-en">map</span> (<span class="pl-k">fn</span> [data]</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-cars-original-clj-LC7" class="blob-code blob-code-inner js-file-line">         (<span class="pl-en">reduce</span> (<span class="pl-k">fn</span> [data field]</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-cars-original-clj-LC8" class="blob-code blob-code-inner js-file-line">                   (<span class="pl-en">assoc</span> data field (<span class="pl-en">parse-string</span> (<span class="pl-en">get</span> data field) <span class="pl-c1">true</span>)))</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="file-cars-original-clj-LC9" class="blob-code blob-code-inner js-file-line">                 data fields)) data))</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="file-cars-original-clj-LC10" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="file-cars-original-clj-LC11" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn-</span> <span class="pl-e">discount-size</span> [discount] </td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="file-cars-original-clj-LC12" class="blob-code blob-code-inner js-file-line">  (<span class="pl-k">if</span> (<span class="pl-en">or</span> </td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="file-cars-original-clj-LC13" class="blob-code blob-code-inner js-file-line">       (<span class="pl-en">&gt;</span> (<span class="pl-c1">:amount</span> discount) <span class="pl-c1">10000</span>)</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="file-cars-original-clj-LC14" class="blob-code blob-code-inner js-file-line">       (<span class="pl-en">&gt;</span> (<span class="pl-c1">:percent</span> discount) <span class="pl-c1">5</span>)) </td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="file-cars-original-clj-LC15" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">:high</span></td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="file-cars-original-clj-LC16" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">:normal</span>))</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="file-cars-original-clj-LC17" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="file-cars-original-clj-LC18" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn-</span> <span class="pl-e">jdbc-array-to-set</span></td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="file-cars-original-clj-LC19" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&quot;</span>Convert a PostgreSQL JDBC4Array inside the map `m` - at the key `k` - into a se<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="file-cars-original-clj-LC20" class="blob-code blob-code-inner js-file-line">  [key m] (<span class="pl-en">update-in</span> m [key] #(<span class="pl-en">some-&gt;&gt;</span> % (<span class="pl-en">.getArray</span>) (<span class="pl-en">into</span> #{}))))</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="file-cars-original-clj-LC21" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="file-cars-original-clj-LC22" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn-</span> <span class="pl-e">compute-discount</span></td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="file-cars-original-clj-LC23" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&quot;</span>Derive the :discount map based on the car&#39;s own discount and its active campaign, if applicable<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="file-cars-original-clj-LC24" class="blob-code blob-code-inner js-file-line">  [car]</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="file-cars-original-clj-LC25" class="blob-code blob-code-inner js-file-line">  (<span class="pl-k">let</span> [{<span class="pl-c1">:keys</span> [json campaign_discount_amount campaign_discount_percent]} car</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="file-cars-original-clj-LC26" class="blob-code blob-code-inner js-file-line">        {<span class="pl-c1">:keys</span> [discount_amount discount_percent]} json</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="file-cars-original-clj-LC27" class="blob-code blob-code-inner js-file-line">        discount? (<span class="pl-c1">:use_campaign</span> car)</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="file-cars-original-clj-LC28" class="blob-code blob-code-inner js-file-line">        amount (<span class="pl-k">if</span> discount?</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="file-cars-original-clj-LC29" class="blob-code blob-code-inner js-file-line">                 (<span class="pl-en">apply</span> + (<span class="pl-en">remove</span> nil? [discount_amount campaign_discount_amount]))</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="file-cars-original-clj-LC30" class="blob-code blob-code-inner js-file-line">                 discount_amount)</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="file-cars-original-clj-LC31" class="blob-code blob-code-inner js-file-line">        percent (<span class="pl-k">if</span> discount?</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="file-cars-original-clj-LC32" class="blob-code blob-code-inner js-file-line">                  (<span class="pl-en">apply</span> + (<span class="pl-en">remove</span> nil? [discount_percent campaign_discount_percent]))</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="file-cars-original-clj-LC33" class="blob-code blob-code-inner js-file-line">                  discount_percent)</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="file-cars-original-clj-LC34" class="blob-code blob-code-inner js-file-line">        discount {<span class="pl-c1">:amount</span> amount</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="file-cars-original-clj-LC35" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c1">:percent</span> percent}</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="file-cars-original-clj-LC36" class="blob-code blob-code-inner js-file-line">        discount-size (<span class="pl-en">discount-size</span> discount)</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="file-cars-original-clj-LC37" class="blob-code blob-code-inner js-file-line">        ]</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="file-cars-original-clj-LC38" class="blob-code blob-code-inner js-file-line">    (<span class="pl-en">assoc</span> car <span class="pl-c1">:discount</span> discount <span class="pl-c1">:discount-size</span> discount-size)))</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="file-cars-original-clj-LC39" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="file-cars-original-clj-LC40" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn</span> <span class="pl-e">merge-campaigns</span></td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="file-cars-original-clj-LC41" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&quot;</span>Given vector of car+campaign for a particular car, return a single car map</span></td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="file-cars-original-clj-LC42" class="blob-code blob-code-inner js-file-line"><span class="pl-s">   with a selected campaign.</span></td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="file-cars-original-clj-LC43" class="blob-code blob-code-inner js-file-line"><span class="pl-s">  <span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="file-cars-original-clj-LC44" class="blob-code blob-code-inner js-file-line">  [car+campaigns]</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="file-cars-original-clj-LC45" class="blob-code blob-code-inner js-file-line">  {<span class="pl-c1">:pre</span> [(<span class="pl-en">sequential?</span> car+campaigns) <span class="pl-c1">:id</span>]}</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="file-cars-original-clj-LC46" class="blob-code blob-code-inner js-file-line">  (<span class="pl-k">let</span> [campaign-ks [<span class="pl-c1">:use_campaign</span> <span class="pl-c1">:campaign_discount_amount</span> <span class="pl-c1">:campaign_discount_percent</span> <span class="pl-c1">:active</span>]</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="file-cars-original-clj-LC47" class="blob-code blob-code-inner js-file-line">        car (<span class="pl-en">apply</span> dissoc</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="file-cars-original-clj-LC48" class="blob-code blob-code-inner js-file-line">                    (<span class="pl-en">first</span> car+campaigns)</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="file-cars-original-clj-LC49" class="blob-code blob-code-inner js-file-line">                    campaign-ks)</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="file-cars-original-clj-LC50" class="blob-code blob-code-inner js-file-line">        campaign (<span class="pl-en">-&gt;&gt;</span> car+campaigns</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="file-cars-original-clj-LC51" class="blob-code blob-code-inner js-file-line">                      (<span class="pl-en">map</span> #(<span class="pl-en">select-keys</span> % campaign-ks))</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="file-cars-original-clj-LC52" class="blob-code blob-code-inner js-file-line">                      (<span class="pl-en">filter</span> <span class="pl-c1">:active</span>)</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="file-cars-original-clj-LC53" class="blob-code blob-code-inner js-file-line">                      (<span class="pl-en">sort-by</span> <span class="pl-c1">:use_campaign</span>) <span class="pl-c"><span class="pl-c">;</span>; true, if any, will be last</span></td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="file-cars-original-clj-LC54" class="blob-code blob-code-inner js-file-line">                      last)]</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="file-cars-original-clj-LC55" class="blob-code blob-code-inner js-file-line">    (<span class="pl-en">assoc</span> car <span class="pl-c1">:best-campaign</span> campaign)))</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="file-cars-original-clj-LC56" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="file-cars-original-clj-LC57" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn</span> <span class="pl-e">refine-cars</span></td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="file-cars-original-clj-LC58" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&quot;</span>Process get-cars query result set - derive additional data, transform values into better ones</span></td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="file-cars-original-clj-LC59" class="blob-code blob-code-inner js-file-line"><span class="pl-s">   There is one row per car and campaign, a car may have more campaigns - we pick the best one.</span></td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="file-cars-original-clj-LC60" class="blob-code blob-code-inner js-file-line"><span class="pl-s">  <span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="file-cars-original-clj-LC61" class="blob-code blob-code-inner js-file-line">  [cars-raw]</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="file-cars-original-clj-LC62" class="blob-code blob-code-inner js-file-line">  (<span class="pl-en">-&gt;&gt;</span> cars-raw</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="file-cars-original-clj-LC63" class="blob-code blob-code-inner js-file-line">   (<span class="pl-en">#(json-&gt;data</span> % [<span class="pl-c1">:json</span>]))</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="file-cars-original-clj-LC64" class="blob-code blob-code-inner js-file-line">   (<span class="pl-en">#(map</span> merge-campaigns</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="file-cars-original-clj-LC65" class="blob-code blob-code-inner js-file-line">        (<span class="pl-en">vals</span> (<span class="pl-en">group-by</span> <span class="pl-c1">:id</span> %))))</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="file-cars-original-clj-LC66" class="blob-code blob-code-inner js-file-line">   (<span class="pl-en">map</span> (<span class="pl-en">comp</span>            <span class="pl-c"><span class="pl-c">;</span>; reminder - the 1st fn is executed last</span></td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="file-cars-original-clj-LC67" class="blob-code blob-code-inner js-file-line">         compute-discount</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="file-cars-original-clj-LC68" class="blob-code blob-code-inner js-file-line">         (<span class="pl-k">fn</span> [m] (<span class="pl-en">update-in</span> m [<span class="pl-c1">:keywords</span>] (<span class="pl-en">partial</span> remove nil?))) <span class="pl-c"><span class="pl-c">;</span>; {NULL} =&gt; []</span></td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="file-cars-original-clj-LC69" class="blob-code blob-code-inner js-file-line">         (<span class="pl-en">partial</span> jdbc-array-to-set <span class="pl-c1">:keywords</span>)</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="file-cars-original-clj-LC70" class="blob-code blob-code-inner js-file-line">         (<span class="pl-en">partial</span> jdbc-array-to-set <span class="pl-c1">:category_ref</span>)</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="file-cars-original-clj-LC71" class="blob-code blob-code-inner js-file-line">         ))</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="file-cars-original-clj-LC72" class="blob-code blob-code-inner js-file-line">   ))</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="file-cars-original-clj-LC73" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="file-cars-original-clj-LC74" class="blob-code blob-code-inner js-file-line">(<span class="pl-en">refine-cars</span> [</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="file-cars-original-clj-LC75" class="blob-code blob-code-inner js-file-line">              {<span class="pl-c1">:id</span> <span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="file-cars-original-clj-LC76" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">:json</span> <span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-cce">\&quot;</span>discount_amount<span class="pl-cce">\&quot;</span>:9000,<span class="pl-cce">\&quot;</span>discount_percent<span class="pl-cce">\&quot;</span>:0}<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="file-cars-original-clj-LC77" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">:campaign_discount_amount</span> <span class="pl-c1">2000</span> </td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="file-cars-original-clj-LC78" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">:campaign_discount_percent</span> <span class="pl-c1">nil</span></td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="file-cars-original-clj-LC79" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">:use_campaign</span> <span class="pl-c1">false</span></td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="file-cars-original-clj-LC80" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">:active</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="file-cars-original-clj-LC81" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">:keywords</span> (<span class="pl-en">db-array</span> [<span class="pl-s"><span class="pl-pds">&quot;</span>fast<span class="pl-pds">&quot;</span></span>])</td>
      </tr>
      <tr>
        <td id="file-cars-original-clj-L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="file-cars-original-clj-LC82" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">:category_ref</span> (<span class="pl-en">db-array</span> [])}])</td>
      </tr>
</table>


  </div>

  </div>
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/holyjak/61d780888f12c3a31b60/raw/f64a230abf27463f585d21770709c11523b3941a/cars-original.clj" style="float:right">view raw</a>
        <a href="https://gist.github.com/holyjak/61d780888f12c3a31b60#file-cars-original-clj">cars-original.clj</a>
        hosted with &#10084; by <a href="https://github.com">GitHub</a>
      </div>
    </div>
</div>
<br><br><h4>Defects and me</h4><br><br>I had originally two [discovered] errors in the code and both took me quite a while to fix - first I forgot to convert JSON from string into a map (wrong assumption about input data) and then I run <em>merge-campaigns</em> directly on the list of car+campaign lists instead of mapping it (the <em>sequential?</em> precondition did not help to detect this error). So the transformations are clearly too error-prone.<br><br>The stack traces did not contain enough helpful context info (though a more experienced Clojurist would have certainly found and fixed the root causes much faster):<br><br><pre><code>
## Forgotten -&gt;json:
java.lang.NullPointerException:
 clojure.lang.Numbers.ops Numbers.java:  961
  clojure.lang.Numbers.gt Numbers.java:  227
  clojure.lang.Numbers.gt Numbers.java: 3787
       core/discount-size     cars.clj:   13
    core/compute-discount     cars.clj:   36
-------------
## Forgotten (map ..):
java.lang.ClassCastException: clojure.lang.PersistentVector cannot be cast to clojure.lang.IPersistentMap
              RT.java:758 clojure.lang.RT.dissoc
            core.clj:1434 clojure.core/dissoc
            core.clj:1436 clojure.core/dissoc
          RestFn.java:142 clojure.lang.RestFn.applyTo
             core.clj:626 clojure.core/apply
cars.clj:36 merge-campaigns
...
</code></pre><br><br>&nbsp;<br><br><h4>Refactored</h4><br><br>This is the code refactored into smaller functions with checks (and it certainly can be improved much more):<div id="gist11431041" class="gist">
    <div class="gist-file">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-cars-refactored-clj" class="file">
    

  <div itemprop="text" class="Box-body p-0 blob-wrapper data type-clojure ">
      
<table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-cars-refactored-clj-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-cars-refactored-clj-LC1" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">require</span> &#39;[cheshire.core <span class="pl-c1">:refer</span> [parse-string]])</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-cars-refactored-clj-LC2" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">require</span> &#39;[clojure.set <span class="pl-c1">:refer</span> [subset? difference ]])</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-cars-refactored-clj-LC3" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-cars-refactored-clj-LC4" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn</span> <span class="pl-e">db-array</span> [col] (<span class="pl-en">reify</span> java.sql.Array (<span class="pl-en">getArray</span> [_] (<span class="pl-en">object-array</span> col))))</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-cars-refactored-clj-LC5" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-cars-refactored-clj-LC6" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn-</span> <span class="pl-e">json-&gt;data</span> [data fields]</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-cars-refactored-clj-LC7" class="blob-code blob-code-inner js-file-line">  {<span class="pl-c1">:pre</span> [(<span class="pl-en">sequential?</span> data) (<span class="pl-en">sequential?</span> fields)]}</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-cars-refactored-clj-LC8" class="blob-code blob-code-inner js-file-line">  (<span class="pl-en">map</span> (<span class="pl-k">fn</span> [data]</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="file-cars-refactored-clj-LC9" class="blob-code blob-code-inner js-file-line">         (<span class="pl-en">reduce</span> (<span class="pl-k">fn</span> to-json [data field]</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="file-cars-refactored-clj-LC10" class="blob-code blob-code-inner js-file-line">                   {<span class="pl-c1">:pre</span> [(<span class="pl-en">map?</span> data) (<span class="pl-en">string?</span> (<span class="pl-en">get</span> data field)) (<span class="pl-en">keyword?</span> field)]}</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="file-cars-refactored-clj-LC11" class="blob-code blob-code-inner js-file-line">                   (<span class="pl-en">assoc</span> data field (<span class="pl-en">parse-string</span> (<span class="pl-en">get</span> data field) <span class="pl-c1">true</span>)))</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="file-cars-refactored-clj-LC12" class="blob-code blob-code-inner js-file-line">                 data fields)) data))</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="file-cars-refactored-clj-LC13" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="file-cars-refactored-clj-LC14" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn-</span> <span class="pl-e">discount-size</span> [{<span class="pl-c1">:keys</span> [amount percent] <span class="pl-c1">:as</span> discount}]</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="file-cars-refactored-clj-LC15" class="blob-code blob-code-inner js-file-line">  {<span class="pl-c1">:pre</span> [(<span class="pl-en">number?</span> amount) (<span class="pl-en">number?</span> percent) (<span class="pl-en">&lt;=</span> <span class="pl-c1">0</span> amount) (<span class="pl-en">&lt;=</span> <span class="pl-c1">0</span> percent <span class="pl-c1">100</span>)]</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="file-cars-refactored-clj-LC16" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">:post</span> [(#{<span class="pl-c1">:high</span> <span class="pl-c1">:normal</span>} %)]}</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="file-cars-refactored-clj-LC17" class="blob-code blob-code-inner js-file-line">  (<span class="pl-k">if</span> (<span class="pl-en">or</span></td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="file-cars-refactored-clj-LC18" class="blob-code blob-code-inner js-file-line">       (<span class="pl-en">&gt;</span> amount <span class="pl-c1">10000</span>)</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="file-cars-refactored-clj-LC19" class="blob-code blob-code-inner js-file-line">       (<span class="pl-en">&gt;</span> percent <span class="pl-c1">5</span>))</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="file-cars-refactored-clj-LC20" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">:high</span></td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="file-cars-refactored-clj-LC21" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">:normal</span>))</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="file-cars-refactored-clj-LC22" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="file-cars-refactored-clj-LC23" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn-</span> <span class="pl-e">jdbc-array-to-set</span></td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="file-cars-refactored-clj-LC24" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&quot;</span>Convert a PostgreSQL JDBC4Array inside the map `m` - at the key `k` - into a se<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="file-cars-refactored-clj-LC25" class="blob-code blob-code-inner js-file-line">  [key m] </td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="file-cars-refactored-clj-LC26" class="blob-code blob-code-inner js-file-line">  {<span class="pl-c1">:pre</span> [(<span class="pl-en">keyword?</span> key) (<span class="pl-en">map?</span> m) (<span class="pl-k">let</span> [a (<span class="pl-en">key</span> m)] (<span class="pl-en">or</span> (<span class="pl-en">nil?</span> a) (<span class="pl-en">instance?</span> java.sql.Array a)))]}</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="file-cars-refactored-clj-LC27" class="blob-code blob-code-inner js-file-line">  (<span class="pl-en">update-in</span> m [key] #(<span class="pl-en">some-&gt;&gt;</span> % (<span class="pl-en">.getArray</span>) (<span class="pl-en">into</span> #{}))))</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="file-cars-refactored-clj-LC28" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="file-cars-refactored-clj-LC29" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn</span> <span class="pl-e">car?</span> [{<span class="pl-c1">:keys</span> [id] <span class="pl-c1">:as</span> car}]</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="file-cars-refactored-clj-LC30" class="blob-code blob-code-inner js-file-line">  (<span class="pl-en">and</span> (<span class="pl-en">map?</span> car) id))</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="file-cars-refactored-clj-LC31" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="file-cars-refactored-clj-LC32" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn-</span> <span class="pl-e">compute-discount</span></td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="file-cars-refactored-clj-LC33" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&quot;</span>Derive the :discount map based on the car&#39;s own discount and its active campaign, if applicable<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="file-cars-refactored-clj-LC34" class="blob-code blob-code-inner js-file-line">  [{{<span class="pl-c1">:keys</span> [discount_amount discount_percent] <span class="pl-c1">:as</span> json} <span class="pl-c1">:json</span></td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="file-cars-refactored-clj-LC35" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">:keys</span> [campaign_discount_amount campaign_discount_percent] <span class="pl-c1">:as</span> car}]</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="file-cars-refactored-clj-LC36" class="blob-code blob-code-inner js-file-line">  {<span class="pl-c1">:pre</span> [(<span class="pl-en">car?</span> car) (<span class="pl-en">map?</span> json) (<span class="pl-en">number?</span> discount_amount) (<span class="pl-en">number?</span> discount_percent)]</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="file-cars-refactored-clj-LC37" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">:post</span> [(<span class="pl-c1">:discount</span> %) (<span class="pl-c1">:discount-size</span> %)]}</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="file-cars-refactored-clj-LC38" class="blob-code blob-code-inner js-file-line">  (<span class="pl-k">let</span> [discount? (<span class="pl-c1">:use_campaign</span> car)</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="file-cars-refactored-clj-LC39" class="blob-code blob-code-inner js-file-line">        amount (<span class="pl-k">if</span> discount?</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="file-cars-refactored-clj-LC40" class="blob-code blob-code-inner js-file-line">                 (<span class="pl-en">apply</span> + (<span class="pl-en">remove</span> nil? [discount_amount campaign_discount_amount]))</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="file-cars-refactored-clj-LC41" class="blob-code blob-code-inner js-file-line">                 discount_amount)</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="file-cars-refactored-clj-LC42" class="blob-code blob-code-inner js-file-line">        percent (<span class="pl-k">if</span> discount?</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="file-cars-refactored-clj-LC43" class="blob-code blob-code-inner js-file-line">                  (<span class="pl-en">apply</span> + (<span class="pl-en">remove</span> nil? [discount_percent campaign_discount_percent]))</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="file-cars-refactored-clj-LC44" class="blob-code blob-code-inner js-file-line">                  discount_percent)</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="file-cars-refactored-clj-LC45" class="blob-code blob-code-inner js-file-line">        discount {<span class="pl-c1">:amount</span> amount</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="file-cars-refactored-clj-LC46" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c1">:percent</span> percent}</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="file-cars-refactored-clj-LC47" class="blob-code blob-code-inner js-file-line">        discount-size (<span class="pl-en">discount-size</span> discount)</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="file-cars-refactored-clj-LC48" class="blob-code blob-code-inner js-file-line">        ]</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="file-cars-refactored-clj-LC49" class="blob-code blob-code-inner js-file-line">    (<span class="pl-en">assoc</span> car <span class="pl-c1">:discount</span> discount <span class="pl-c1">:discount-size</span> discount-size)))</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="file-cars-refactored-clj-LC50" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="file-cars-refactored-clj-LC51" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn</span> <span class="pl-e">select-campaign</span></td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="file-cars-refactored-clj-LC52" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&quot;</span>Return a single car map with a selected campaign.<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="file-cars-refactored-clj-LC53" class="blob-code blob-code-inner js-file-line">  [{<span class="pl-c1">:keys</span> [campaigns] <span class="pl-c1">:as</span> car}]</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="file-cars-refactored-clj-LC54" class="blob-code blob-code-inner js-file-line">  {<span class="pl-c1">:pre</span> [(<span class="pl-en">car?</span> car) (<span class="pl-en">sequential?</span> campaigns)]</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="file-cars-refactored-clj-LC55" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">:post</span> [(<span class="pl-en">contains?</span> % <span class="pl-c1">:best-campaign</span>)]}</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="file-cars-refactored-clj-LC56" class="blob-code blob-code-inner js-file-line">  (<span class="pl-k">let</span> [best-campaign (<span class="pl-en">-&gt;&gt;</span> campaigns</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="file-cars-refactored-clj-LC57" class="blob-code blob-code-inner js-file-line">                          (<span class="pl-en">filter</span> <span class="pl-c1">:active</span>)</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="file-cars-refactored-clj-LC58" class="blob-code blob-code-inner js-file-line">                          (<span class="pl-en">sort-by</span> <span class="pl-c1">:use_campaign</span>) <span class="pl-c"><span class="pl-c">;</span>; true, if any, will be last</span></td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="file-cars-refactored-clj-LC59" class="blob-code blob-code-inner js-file-line">                          last)]</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="file-cars-refactored-clj-LC60" class="blob-code blob-code-inner js-file-line">    (<span class="pl-en">-&gt;</span> car</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="file-cars-refactored-clj-LC61" class="blob-code blob-code-inner js-file-line">        (<span class="pl-en">dissoc</span> <span class="pl-c1">:campaigns</span>)</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="file-cars-refactored-clj-LC62" class="blob-code blob-code-inner js-file-line">        (<span class="pl-en">assoc</span> <span class="pl-c1">:best-campaign</span> best-campaign))))</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="file-cars-refactored-clj-LC63" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="file-cars-refactored-clj-LC64" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn</span> <span class="pl-e">nest-campaign</span> [car]</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="file-cars-refactored-clj-LC65" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">;</span>; :pre check for campaing keys would require too much repetition =&gt; an assert instead</span></td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="file-cars-refactored-clj-LC66" class="blob-code blob-code-inner js-file-line">  {<span class="pl-c1">:pre</span> [(<span class="pl-en">car?</span> car)]</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="file-cars-refactored-clj-LC67" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">:post</span> [((<span class="pl-en">comp</span> map? <span class="pl-c1">:campaign</span>) %)]}</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="file-cars-refactored-clj-LC68" class="blob-code blob-code-inner js-file-line">  (<span class="pl-k">let</span> [ks (<span class="pl-en">set</span> (<span class="pl-en">keys</span> car))</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="file-cars-refactored-clj-LC69" class="blob-code blob-code-inner js-file-line">        campaign-ks #{<span class="pl-c1">:campaign_discount_amount</span> <span class="pl-c1">:campaign_discount_percent</span> <span class="pl-c1">:use_campaign</span> <span class="pl-c1">:active</span>}</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="file-cars-refactored-clj-LC70" class="blob-code blob-code-inner js-file-line">        campaign (<span class="pl-en">select-keys</span> car campaign-ks)]</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="file-cars-refactored-clj-LC71" class="blob-code blob-code-inner js-file-line">    (<span class="pl-en">assert</span> (<span class="pl-en">subset?</span> campaign-ks ks)</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="file-cars-refactored-clj-LC72" class="blob-code blob-code-inner js-file-line">            (<span class="pl-en">str</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Campaign keys missing from the car <span class="pl-pds">&quot;</span></span> (<span class="pl-c1">:id</span> car) <span class="pl-s"><span class="pl-pds">&quot;</span>: <span class="pl-pds">&quot;</span></span> </td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="file-cars-refactored-clj-LC73" class="blob-code blob-code-inner js-file-line">                 (<span class="pl-en">difference</span> campaign-ks ks)))</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="file-cars-refactored-clj-LC74" class="blob-code blob-code-inner js-file-line">    (<span class="pl-en">-&gt;</span> (<span class="pl-en">apply</span> dissoc car campaign-ks)</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="file-cars-refactored-clj-LC75" class="blob-code blob-code-inner js-file-line">        (<span class="pl-en">assoc</span> <span class="pl-c1">:campaign</span> campaign))))</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="file-cars-refactored-clj-LC76" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="file-cars-refactored-clj-LC77" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn</span> <span class="pl-e">group-rows-by-car</span> [cars-raw]</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="file-cars-refactored-clj-LC78" class="blob-code blob-code-inner js-file-line">  {<span class="pl-c1">:pre</span> [(<span class="pl-en">sequential?</span> cars-raw) (<span class="pl-en">every?</span> map? cars-raw)]</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="file-cars-refactored-clj-LC79" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">:post</span> [(<span class="pl-en">sequential?</span> %) (<span class="pl-en">every?</span> vector? %)]}</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="file-cars-refactored-clj-LC80" class="blob-code blob-code-inner js-file-line">  (<span class="pl-en">vals</span> (<span class="pl-en">group-by</span> <span class="pl-c1">:id</span> cars-raw)))</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="file-cars-refactored-clj-LC81" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="file-cars-refactored-clj-LC82" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn</span> <span class="pl-e">join-campaigns</span> [[car+campaign <span class="pl-c1">:as</span> all]]</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="file-cars-refactored-clj-LC83" class="blob-code blob-code-inner js-file-line">  {<span class="pl-c1">:pre</span> [(<span class="pl-en">sequential?</span> all) (<span class="pl-c1">:campaign</span> car+campaign)]</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="file-cars-refactored-clj-LC84" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">:post</span> [(<span class="pl-c1">:campaigns</span> %)]}</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="file-cars-refactored-clj-LC85" class="blob-code blob-code-inner js-file-line">  (<span class="pl-en">-&gt;</span> car+campaign</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="file-cars-refactored-clj-LC86" class="blob-code blob-code-inner js-file-line">      (<span class="pl-en">assoc</span> <span class="pl-c1">:campaigns</span></td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="file-cars-refactored-clj-LC87" class="blob-code blob-code-inner js-file-line">        (<span class="pl-en">map</span> <span class="pl-c1">:campaign</span> all))</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="file-cars-refactored-clj-LC88" class="blob-code blob-code-inner js-file-line">      (<span class="pl-en">dissoc</span> <span class="pl-c1">:campaign</span>)))</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="file-cars-refactored-clj-LC89" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="file-cars-refactored-clj-LC90" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn</span> <span class="pl-e">refine-car</span> [car]</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="file-cars-refactored-clj-LC91" class="blob-code blob-code-inner js-file-line">  {<span class="pl-c1">:pre</span> [(<span class="pl-en">car?</span> car)]</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="file-cars-refactored-clj-LC92" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">:post</span> [(<span class="pl-c1">:discount</span> %)]} <span class="pl-c"><span class="pl-c">;</span> keywords and :category_ref are optional</span></td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="file-cars-refactored-clj-LC93" class="blob-code blob-code-inner js-file-line">  (<span class="pl-en">-&gt;&gt;</span> car</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="file-cars-refactored-clj-LC94" class="blob-code blob-code-inner js-file-line">      (<span class="pl-en">jdbc-array-to-set</span> <span class="pl-c1">:category_ref</span>)</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="file-cars-refactored-clj-LC95" class="blob-code blob-code-inner js-file-line">      (<span class="pl-en">jdbc-array-to-set</span> <span class="pl-c1">:keywords</span>)</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="file-cars-refactored-clj-LC96" class="blob-code blob-code-inner js-file-line">      (<span class="pl-en">#(update-in</span> % [<span class="pl-c1">:keywords</span>] (<span class="pl-en">partial</span> remove nil?))) <span class="pl-c"><span class="pl-c">;</span>; {NULL} =&gt; []</span></td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="file-cars-refactored-clj-LC97" class="blob-code blob-code-inner js-file-line">      (<span class="pl-en">select-campaign</span>)</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="file-cars-refactored-clj-LC98" class="blob-code blob-code-inner js-file-line">      (<span class="pl-en">compute-discount</span>)))</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="file-cars-refactored-clj-LC99" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="file-cars-refactored-clj-LC100" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">defn</span> <span class="pl-e">refine-cars</span></td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="file-cars-refactored-clj-LC101" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&quot;</span>Process get-cars query result set - derive additional data, transform values into better ones</span></td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="file-cars-refactored-clj-LC102" class="blob-code blob-code-inner js-file-line"><span class="pl-s">   There is one row per car and campaign, a car may have more campaigns - we pick the best one.</span></td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="file-cars-refactored-clj-LC103" class="blob-code blob-code-inner js-file-line"><span class="pl-s">  <span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="file-cars-refactored-clj-LC104" class="blob-code blob-code-inner js-file-line">  [cars-raw]</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="file-cars-refactored-clj-LC105" class="blob-code blob-code-inner js-file-line">  (<span class="pl-en">-&gt;&gt;</span> cars-raw</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="file-cars-refactored-clj-LC106" class="blob-code blob-code-inner js-file-line">       (<span class="pl-en">#(json-&gt;data</span> % [<span class="pl-c1">:json</span>]))</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="file-cars-refactored-clj-LC107" class="blob-code blob-code-inner js-file-line">       (<span class="pl-en">map</span> nest-campaign)</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="file-cars-refactored-clj-LC108" class="blob-code blob-code-inner js-file-line">       (<span class="pl-en">group-rows-by-car</span>)</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="file-cars-refactored-clj-LC109" class="blob-code blob-code-inner js-file-line">       (<span class="pl-en">map</span> join-campaigns)</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="file-cars-refactored-clj-LC110" class="blob-code blob-code-inner js-file-line">       (<span class="pl-en">map</span> refine-car)</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="file-cars-refactored-clj-LC111" class="blob-code blob-code-inner js-file-line">   ))</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="file-cars-refactored-clj-LC112" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="file-cars-refactored-clj-LC113" class="blob-code blob-code-inner js-file-line">(<span class="pl-en">refine-cars</span> [</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="file-cars-refactored-clj-LC114" class="blob-code blob-code-inner js-file-line">              {<span class="pl-c1">:id</span> <span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="file-cars-refactored-clj-LC115" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">:json</span> <span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-cce">\&quot;</span>discount_amount<span class="pl-cce">\&quot;</span>:9000,<span class="pl-cce">\&quot;</span>discount_percent<span class="pl-cce">\&quot;</span>:0}<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="file-cars-refactored-clj-LC116" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">:campaign_discount_amount</span> <span class="pl-c1">2000</span></td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="file-cars-refactored-clj-LC117" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">:campaign_discount_percent</span> <span class="pl-c1">nil</span></td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="file-cars-refactored-clj-LC118" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">:use_campaign</span> <span class="pl-c1">false</span></td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="file-cars-refactored-clj-LC119" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">:active</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="file-cars-refactored-clj-LC120" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">:keywords</span> (<span class="pl-en">db-array</span> [<span class="pl-s"><span class="pl-pds">&quot;</span>fast<span class="pl-pds">&quot;</span></span>])</td>
      </tr>
      <tr>
        <td id="file-cars-refactored-clj-L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="file-cars-refactored-clj-LC121" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">:category_ref</span> (<span class="pl-en">db-array</span> [])}])</td>
      </tr>
</table>


  </div>

  </div>
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/holyjak/fb5cc1b18415df0c6daf/raw/d1a1a28daa7b2c0f9842e8873061b8e2a218af14/cars-refactored.clj" style="float:right">view raw</a>
        <a href="https://gist.github.com/holyjak/fb5cc1b18415df0c6daf#file-cars-refactored-clj">cars-refactored.clj</a>
        hosted with &#10084; by <a href="https://github.com">GitHub</a>
      </div>
    </div>
</div>
<br><br><h2>Downsides</h2><br><br>The main problem with pre- and post-conditions is that they do not provide any useful context in their error message and do not support adding a custom message. An error like<br><br><code>Assert failed: (let [a (key m)] (or (nil? a) (instance? java.sql.Array a))) cars.clj:18 user/jdbc-array-to-set</code><br><br>is better than not failing fast but does not tell as what the invalid value was and which of the thousands of cars had the invalid value.<br><br>Also, the checks are performed at runtime so they have a performance cost. This might not be a problem with checks such as (map?) but could be with f.ex. (every?).<br><br><h2>What about duplication?</h2><br><br>Do you repeat the same checks again and again? Then you could either copy them using <code>with-meta</code> (they end-up in metadata anyway) or reuse the explicitely:<br><br><pre><code>
(defn with-valid-car [f] (fn [car] {:pre [:make :model :year]} (f car)))<br><br>(def count-price (with-valid-car (fn [car] (do-something car))))
;; or make &amp; use a macro to make it nicer
</code></pre><br><br><h2>What about static types</h2><br><br>This looks arguably like a good case for static types. And yes, I come from Java and lack them. On the other hand, even though static typing would solve the main category of problems, it creates new ones and has its liits.<br><br>A) I have actually quite a number of "types" here so it would require lot of classes to model fully:<br><br><ol>
    <li>Raw data from the DB - car with campaign fields and keywords, category_ref as java.sql.Array</li>
    <li>Car with keywords as a sequence</li>
    <li>Car with¬†category_ref as a sequence</li>
    <li>Car with a nested :campaign "object"</li>
    <li>Car with a nested :best-campaign object and with :rate (you could have :rate there from start, set initially to nil, but then you'd still need to ensure that the final function sets it to a value)</li>
</ol><br><br>B) A key strength of Clojure is the use of generic data structures - maps, vectors, lazy sequences - and powerful, easy to combine generic functions operating on them. It makes integrating libraries very easy since everything is just a map (and not a custom type that needs to be converted) and you can always transform these with your old good friends functions - whether it is a Korma SQL query definition, result set, or a HTTP request. Static types take this away.<br><br>C) Types permit only a subset of checks that you might need (that is unless you use Haskell :)) - they can check that a thing is a car but not that a return value is in the range 7 ... 42.<br><br>D) Some functions do not care about the type, only its small part - f.ex. jdbc-array-to-set only cares about the argument being a map, having the key, and if set, the value being a <em>java.sql.Array</em>.<br><br><h2>What else is out there?</h2><br><br><ul>
    <li><a href="https://typedclojure.org/">core.typed</a></li>
    <li><a href="https://github.com/Prismatic/schema">prismatic/schema</a></li>
    <li>contracts programming with <a href="https://github.com/clojure/core.contracts">core.contracts</a></li>
</ul><br><br><h2>Conclusion</h2><br><br>Using smaller functions and pre+post conditions, I can discover errors much earlier and also document the expected shape of the data better, even more so with destructuring in fn signatures. There is some duplication in the pre/post conditions and the error messages are little helpful but is much better. I guess that more complex cases may warant the use of core.contracts or even core.typed / schema.<br><br>What strategies do you use? What would you improve? Other comments?<br><br>I encourage you to fork and improve the gist and share your take on it.<br><br><strong>Updates</strong><br><br><ol>
    <li>Lawrence Krubner recommends using <a href="https://github.com/MichaelDrogalis/dire#preconditions">dire</a> to capture the arguments and return value to provide a useful error message</li>
    <li>Alf Kristian recommends adding more tests and integration tests and if it is not enough, using core.typed rather than :pre and :post (<a href="https://github.com/clojure-cookbook/clojure-cookbook/blob/d0b080d6a702ffcf630a9091ba6f75bb0989f0e2/10_testing/10-09_hof-typed.asciidoc">example</a>)</li>
</ol>
++++
