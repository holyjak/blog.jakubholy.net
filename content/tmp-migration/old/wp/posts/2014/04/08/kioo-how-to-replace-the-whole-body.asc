{:title "Kioo: How To Replace The Whole Body",
 :date "2014-04-08",
 :layout :post,
 :tags ["ClojureScript"],
 :tags-orig ["ClojureScript" "kioo"],
 :categories ["Languages"],
 :extra-css #{}
}

++++
<ins datetime="2014-04-09T14:48:02+00:00">
This whole post in unnecessary since it is simply possible to <a href="https://github.com/ckirkendall/kioo/pull/15#issuecomment-39970887">use a snippet directly without a template</a>, as kindly explained by Creighton Kirkendall.
</ins><br><br><div style="text-decoration:line-through;">
<a href="https://github.com/ckirkendall/kioo">Kioo</a>, the enlive-inspired templating library for React.js and derived libs such as Om, normally works by matching selectors against elements inside <code>&lt;body&gt;</code> and transforming the matched elements while also keeping all the other ones. But what if you want to keep just the single matched element and drop all the others? You need some tricks and I will demonstrate one possible way.<br><br><em>Dislaimer: This is a result of my experimentation, not deep knowledge if Kioo.</em><br><br><!--more--><br><br>This template HTML:<br><br><pre><code>
&lt;!-- kiootest.html --&gt;
&lt;html lang=&quot;en&quot;&gt;
  &lt;body&gt;
    &lt;div id=&quot;contentOne&quot;&gt;Cool content modified by &lt;span id=&quot;name&quot;&gt;???&lt;/span&lt;/div&gt;                                           
    &lt;div id=&quot;contentTwo&quot;&gt;place holder 2&lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre><br><br>turned into an Om component with this code:<br><br><pre><code>
(ns experiment.core
  (:require-macros [kioo.om :refer [defsnippet deftemplate]])
  (:require [om.core :as om :include-macros true]
            [kioo.om :as kioo]))
(deftemplate kiootest &quot;kiootest.html&quot; [_]
  {[:#contentOne :#name] (kioo/content &quot;#inserted by Kioo#&quot;)})<br><br>(om/root #(om/component (kiootest %)) (atom {}) 
         {:target (. js/document (getElementById &quot;om-shop-list2&quot;))})
</code></pre><br><br>would produce this HTML (the wrapping om-shop-list2 is not produced by the template):<br><br><pre><code>
&lt;div id=&quot;om-shop-list2&quot;&gt;
  &lt;div id=&quot;contentOne&quot; data-reactid=&quot;.5.1&quot;&gt;
    &lt;span data-reactid=&quot;.5.1.0&quot;&gt;Cool content modified by&lt;/span&gt;
    &lt;span id=&quot;name&quot; data-reactid=&quot;.5.1.1&quot;&gt;#inserted byKioo#&lt;/span&gt;
  &lt;/div&gt;
  &lt;div id=&quot;contentTwo&quot; data-reactid=&quot;.5.3&quot;&gt;place holder 2&lt;/div&gt;
&lt;/div&gt;
</code></pre><br><br>This is not what we want - we want to use <em>contentOne</em> but ignore the rest of the template, i.e. <em>contentTwo</em>. You might think of using <code>[:body]</code> to match and substitute the full content of the template but that will not work. The reason is that Kioo normally matches your selectors only against tags inside <code>&lt;body&gt;</code>. If you want to match <code>body</code> itself, you need to use slightly different syntax where you explicitely define the root element selector (either <code>:root</code>, which would match the full html, I suppose, or f.ex. <code>:body</code>).<br><br>So we will use a snippet to extract and modify the part of the HTML we want to keep and specify an explicit root selector (instead of the default <code>[:body :&gt; any-node]</code>) on the template to match and replace the whole body:<br><br><pre><code>
(defsnippet kiootest-one &quot;kiootest.html&quot; [:#contentOne] [_]
  {[:#name] (content &quot;Kioo&quot;)})<br><br>(deftemplate kiootest &quot;kiootest.html&quot; [_]
  [:body] {[:body] (substitute (kiootest-one _))})
;;  ^- custom root selector
;;            ^- inside the selected &lt;body..&gt;..&lt;/body&gt;, match the body element itself<br><br>(om/root #(om/component (kiootest %)) (atom {}) 
         {:target (. js/document (getElementById &quot;om-shop-list2&quot;))})<br><br></code></pre><br><br>which will produce the desired<br><br><pre><code>
&lt;div id=&quot;om-shop-list2&quot;&gt;
  &lt;div id=&quot;contentOne&quot; data-reactid=&quot;.4&quot;&gt;
    &lt;span data-reactid=&quot;.4.0&quot;&gt;Cool content modified by&lt;/span&gt;
    &lt;span id=&quot;name&quot; data-reactid=&quot;.4.1&quot;&gt;Kioo&lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;
</code></pre><br><br><h2>Summary</h2>
Kioo by default matches your selectors against <code>[:body :&gt; any-node]</code> so you cannot match <code>:body</code> itself. You should rarely need it - especially if you control the HTML and can wrap the content of body into a <code>div</code> that you can then normally match against with Kioo. However, if necessary, you can also provide a custom root selector using the syntax <code>[&lt;your selector&gt; {&lt;selectors and transforms&gt;}]</code>, f.ex. <code>(deftemplate ... [:body] {[:body] (substitute (your-snippet-name _))})</code>.<br><br></div>
++++
