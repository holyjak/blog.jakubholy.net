{:title
 "How To Generate A Valid Credit Card Number For A Bin (First 6 Digits)",
 :date "2014-03-25",
 :layout :post,
 :tags ["java" "groovy"],
 :tags-orig ["groovy" "java"],
 :categories ["General" "Languages" "Testing"],
 :extra-css #{}
}

++++
There is plenty of generators that can produce numbers that are valid credit card numbers according to the <a href="https://en.wikipedia.org/wiki/Luhn_algorithm">Luhn check</a> and specific rules of the individual issuer companies. However I have not found anything that would generate the missing digits given a <a href="https://en.wikipedia.org/wiki/Bank_card_number">bin</a>, i.e. the first 6 digits of a credit card (the "bank identification number"). So I created one, reverse-engineering <code>org.apache.commons.validator.routines.CreditCardValidator</code> from <a href="https://commons.apache.org/proper/commons-validator/">common-validator</a> 1.4:<br><br><pre><code>
// Groovy:
/** Map RegExp from C.C.Validator to the total length of the CC# */
binReToLen = [
        (~/^(3[47]\d{0,13})$/) : 13+2, // amex
        (~/^30[0-5]\d{0,11}$/) : 11+3, // diners 1
        (~/^(3095\d{0,10})$/) : 10+4, // diners 2
        (~/^(36\d{0,12})$/) : 12+2,     // diners 3
        (~/^|3[8-9]\d{0,12}$/) : 12+2,  // diners 4
        (~/^(5[1-5]\d{0,14})$/) : 14+2, // master
        (~/^(4)(\d{0,12}|\d{15})$/) : 12+1 // visa
        // Discover cards omitted
]<br><br>/** Bin is e.g. 123456 */
def completeCCn(String bin) {
    def ccnFill = &quot;1&quot; * 19
    int ccnLen = lenForBin(bin)<br><br>    def ccnWithoutCheck = bin + ccnFill[0..&lt;(ccnLen - 6 - 1)] // - bin, - check digit<br><br>    def check = computeLuhncheckDigit(ccnWithoutCheck)<br><br>    return &quot;$ccnWithoutCheck$check&quot;
}<br><br>def lenForBin(String bin) {
    def match = binReToLen.find { it.key.matcher(bin).matches() }
    if (match == null) {
        throw new RuntimeException(&quot;Bin $bin does not match any known CC issuer&quot;)
    }
    match.value
}<br><br>def computeLuhncheckDigit(def ccnWithoutCheck) {
    org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.LUHN_CHECK_DIGIT.calculate(ccnWithoutCheck)
}<br><br>completeCCn('465944') // =&gt; 4659441111118
</code></pre><br><br>Testing FTW!
++++
