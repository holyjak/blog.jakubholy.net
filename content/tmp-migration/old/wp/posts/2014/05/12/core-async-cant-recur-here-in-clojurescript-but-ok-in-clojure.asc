{:title
 "core.async: \"Can't recur here\" in ClojureScript but OK in Clojure",
 :date "2014-05-12",
 :layout :post,
 :tags ["ClojureScript"],
 :tags-orig ["ClojureScript"],
 :categories ["Languages"],
 :extra-css #{}
}

++++
With the latest core.async and ClojureScript (<code>core.async "0.1.303.0-886421-alpha"</code> and <code>clojurescript "0.0-2202"</code> as well as the older <code>core.async "0.1.267.0-0d7780-alpha"</code> and <code>clojurescript "0.0-2173"</code>), the following function compiles just fine in Clojure but fails in ClojureScript:<br><br><pre><code>
(defn cljs-cannot-recur! []
  (go-loop [v nil]
    (when-let [next-val (&lt;! (timeout 300))]
      (recur next-val))))
</code></pre><br><br>The error in ClojureScript is<br><br><pre><code>
clojure.lang.ExceptionInfo: Can't recur here at line 23 /my/path/core.cljs ::
  {:tag :cljs/analysis-error, :file &quot;/my/path/core.cljs&quot;, :line 23, :column 7}
             core.clj:4403 clojure.core/ex-info
             ... // very long stacktrace of 0 value
</code></pre><br><br>Workaround: replace <code>(go-loop ..)</code> with <code>(go (loop ..))</code>.<br><br>Another fun fact: <a href="https://github.com/clojure/clojurescript/blob/r2197/src/clj/cljs/core.clj">ClojureScript's core.async</a> lacks (at least) <a href="https://clojure.github.io/core.async/#clojure.core.async/alt!">alt!</a> (I did work around it by using alts! so it is not a show-stopper but still the difference is irritating and I fail to understand why it is missing.)<br><br>Oh, joy!
++++
