{:title "Experiencing JSF 1.2: Good but Needs a Framework",
 :date "2011-07-30",
 :layout :post,
 :tags ["webdev" "java" "library"],
 :tags-orig ["framework" "java" "jsf" "UI"],
 :categories ["j2ee" "Languages"],
 :extra-css #{}
}

++++
I've got an opportunity to experiment with JSF 1.2 while preparing a lecture about <a href="https://sourceforge.net/apps/mediawiki/jeeutils/index.php?title=DbUnit_Express">DbUnit Express</a> and test webapp for <a href="/2011/06/22/validating-jsf-el-expressions-in-jsf-pages-with-static-jsfexpression-validator/">JSF EL Validator</a>. Same as JSF 1.1, it's much easier to use than the low level, too HTTP-ish servlets but still it is not flexible enough and usable per se, it is absolutely necessary to use a decent framework (such as Rich or ICE Faces) to be really productive. Automatic value and method binding is cool but not sufficient.<br><br>For example forcing dataTable to get filtered when you change selection in a select list was rather non-trivial and making the table sortable by every column required quite lot of work and if I wanted to have that for every table, I'd need to develop framework of my own. Of course with various JSF component libraries you get such things out of the box but still JSF 1.2 is little to rigid, for example methods that could take parameters (which came in JSF 2.0) would make things a lot simpler.<br><br>I've also considered using business objects - such as EJBs - directly as JSF backing beans but I feel that in this version it might be suitable only for small applications (where the overhead of concern separation doesn't pay off) or  some special ones. The problem is that even though backing beans are POJOs, JSF still forces them to a rather specific shape, which should be confined to the web layer  - such as having action methods that take no parameters and return an indication of which view to dislay next.<br><br>I would very much like to experiment with and compare other interesting frameworks such as Play!, Grails, and GWT (and given that I've finally got to learning Clojure, perhaps also Compojure), though I likely won't have time for that. If I do, you will come to know :-)
<h2>Related posts</h2>
<ul>
	<li><a href="https://www.dzone.com/links/r/hyperproductive_javaserver_faces.html">Hyperproductive JavaServer Faces</a> - how to be productive with JSF 2 including the elimination of redeployments</li>
</ul>
++++
