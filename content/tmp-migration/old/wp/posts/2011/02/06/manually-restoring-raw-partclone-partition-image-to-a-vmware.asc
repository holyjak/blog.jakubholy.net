{:title "Manually restoring raw partclone partition image to a VMWare",
 :date "2011-02-06",
 :layout :post,
 :tags ["DevOps"],
 :tags-orig ["backup" "clonezilla" "partclone" "vmware"],
 :categories ["Tools"],
 :extra-css #{}
}

++++
This post sums up how to manually restore a partition backup create by Clonezilla (using partclone) into a VMware virtual machine, which can be then either executed or its (virtual) disk mounted. The difficult points are "manual" and "partition backup" (would be much easier with a full disk backup). Normally I restore a backup by running Clonezilla from a virtual machine with sufficiently large virtual disk, but at times it isn't possible, e.g. because the Clonezilla kernel has a buggy USB driver which tends to disconnect at times (at least with my version &amp; flash disk).<!--more-->
<h2>Problems with VMware</h2>
<ol>
	<li>VMware can boot from a raw partition, but it must be a physical one, not its image stored in a file</li>
	<li>VMware doesn't support loop devices for accessing such a partition (or disk) image - that's because loop devices don't behave as true physical disk, i.e. are missing support for some commands that VMware uses (though sb. has implemented a patch for VMware to work around this)</li>
	<li>VMware can boot from an image of a raw disk, but it must be a full disk (including MBR, partition table), not just a partition</li>
</ol>
<!-- https://github.com/vasi/vmdk-raw-parts#readme sudo ./vmdk-raw-parts /dev/sda sda.vmdk =&gt; sda.vmdk/ containing: mbr            regen.sh       sda.vmdk.vmdk  - ls -l  block-size=512 sda1.ext4-ptcl-restored2.img =&gt; 550177992 -->
<h2>Failed attempt: Use VirtualBox's support for partitions</h2>
In theory, Virtual Box could be used with few tricks to mount from a raw partition image (by configuring it to boot from the original true raw partition and then changing the device in the configuration to a loop device) but for me VB was very unreliable, managed to boot correctly only occasionally and when it did then the graphics was a bit strange, which prevented me from logging in to the backed-up OS. Anyway, for those who're interested, I'll record my steps here.<br><br>See <a href="https://www.virtualbox.org/manual/ch09.html#rawdisk">http://www.virtualbox.org/manual/ch09.html#rawdisk</a><br><br>0. Mount the restored partition:<br><br><pre><code>sudo mount -t ext4 -o loop,nosuid,nodev /media/jholy1g/sda1.ext4-ptcl-restored.img /mnt</code></pre><br><br># in my case mounted to /dev/loop0 as revealed by running <em>mount</em>.<br><br>1. Create vbox image from a physical disk where the backed-up partition comes from (/dev/sda, partition #5 in my case):<br><br><pre><code>sudo VBoxManage internalcommands createrawvmdk -filename vbox-sda.vmdk -rawdisk /dev/sda -partitions 5 -relative</code></pre><br><br>2. In the generated vbox-sda.vmdk, replace the physical /dev/sda5 with /dev/loop0<br><br>3. Start virtualbox from the commandline where you're sure to have access to /dev/loop0<br><br>(adduser myname disk; newgrp disk; virtualbox)<br><br>4. Create new VirtualBox virt. machine with an existing hard drive image, i.e. the one created above
<h2>Success: Restoration to a mounted vmware partition</h2>
See <a href="https://cromoteca.com/en/blog/mountflatvmwarediskimagesunderlinux/">http://cromoteca.com/en/blog/mountflatvmwarediskimagesunderlinux/</a><br><br>Summary:
<ol>
	<li>Create a pre-allocated (non-growing) vmware disk of a sufficient size</li>
	<li>Run a virtual machine with e.g. an Ubuntu live CD and the disk, create there a partitiona and set its boot flag</li>
	<li>Stop the vmware VM</li>
	<li>Mount the virtual vmdk disk as a loop device from the host system</li>
	<li>Mount the vmdk's first partition as a loop device (beware you need to use the correct offset here!)</li>
	<li>Use partclone to restore the (joined &amp; decompressed) backup to the partition's loop device</li>
	<li>Umount the partition</li>
	<li>Install GRUB into the virtual disk and configure it to boot the 1st partition (either from the host system, or, which may be easier, from within vmware)</li>
	<li>Run the virtual machine, booting from the thus prepared disk</li>
</ol>
<h3>Restoring to a virtual vmware disk's partition</h3>
Create a pre-allocated (non-growing) vmware disk of a sufficient size in the VMWare Player.<br><br>This part is mostly taken over from <a href="https://cromoteca.com/en/blog/mountflatvmwarediskimagesunderlinux/">Mount Flat VMWare Disk Images Under Linux</a>.<br><br>Mount the virtual disk:<br><br><pre><code>sudo losetup /dev/loop0 /media/MyBook-Linux/vmware/Ubuntu-candyRestore/Ubuntu-candyRestore-0-flat.vmdk</code></pre><br><br>Find out where the first partition of the virtual disk starts for correct offset when mounting it:<br><br><pre><code>
$ sudo fdisk -lu /dev/loop0<br><br>Disk /dev/loop0: 306.0 GB, 306016419840 bytes
97 heads, 12 sectors/track, 513477 cylinders, total 597688320 sectors
Units = sectors of 1 * 512 = 512 bytes
Disk identifier: 0xaa3590f4<br><br>Device Boot      Start         End      Blocks   Id  System
/dev/loop0p1   *        2048   597688319   298843136   83  Linux
</code></pre><br><br>=&gt; 2048 * 512 = 1048576 bytes<br><br>Mount the VMDK partition, using the computed offset (in bytes):<br><br><pre><code>sudo losetup -v -o 1048576 /dev/loop1 /dev/loop0</code></pre><br><br>Restore the (joined and uncompressed) partclone backup to the virtual partition:<br><br><pre><code>sudo partclone.restore -C -s /media/jholy1g/sda1.ext4-ptcl-img -o /dev/loop1</code></pre><br><br>To verify, mount the restored filesystem:<br><br><pre><code>sudo mount /dev/loop1 /tmp/mpoint</code></pre><br><br>Further verification: Run the VM with a live CD, try to manually mount the partition similarly as above (or check whether the OS recognizes it as a valid, mountable one) - if not then perhaps the offset wasn't right.
<h3>Making the virtual disk bootable from the restored partition</h3>
Now that we have restored our backup to a VMDK's partition, we need to make it possible for VMWare to boot from the partition. To achieve that, we would need to install a boot manager such as Grub to the virtual image and configure it to use the partition.<br><br>There is a related blog describing <a href="https://www.praggo.com/2010/09/building-custom-linux-os-part-2-working.html">how to install grub to a raw disk image</a> and <a href="https://grulicueva.homelinux.net/~mdione/glob/posts/create-a-disk-image-with-a-booting-running-debian/">another similar article</a>, which is quite similar to our need here.<br><br><strong>TBD</strong>: I clearly won't have an opportunity to try this in the forseeable future but I suppose the easiest way would be to run the virtual machine with the disk booting from a Linux live CD and <a href="https://ubuntuforums.org/showthread.php?t=1195275">install Grub</a> there (perhaps via the <a href="https://launchpad.net/~danielrichter2007/+archive/grub-customizer">Grub Customizer</a> GUI).<br><br>Installing Grub without vmware, from the host system (having the vmdk partition mounted as a loop device as described above), should be also pretty much possible.<br><br>Sorry for leaving this unfinished. If I ever have time to come back to this, I'll update the post.
<h2>Additional notes</h2>
<ul>
	<li>VMWare comes with a tool for mounting its virtual disks from the host</li>
</ul>
++++
