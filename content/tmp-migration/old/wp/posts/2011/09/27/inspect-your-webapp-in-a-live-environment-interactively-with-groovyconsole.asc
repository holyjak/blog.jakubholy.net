{:title
 "Inspect Your Webapp in a Live Environment Interactively with GroovyConsole",
 :date "2011-09-27",
 :layout :post,
 :tags ["java" "groovy" "troubleshooting" "productivity" "library"],
 :tags-orig
 ["groovy" "java" "productivity" "project" "troubleshooting"],
 :categories ["j2ee" "Languages" "Tools"],
 :extra-css #{}
}

++++
Have you ever needed to check the state of your webapp's objects/Session/.. to find out why the hell something doesn't work or have you had to learn a weird 3rd party API that is only available on the server? Then you were doomed ... until the publication of GroovyConsole. <a href="https://sourceforge.net/apps/mediawiki/jeeutils/index.php?title=GroovyConsole_servlet_or_portlet">JeeUtilsÂ GroovyConsole</a> provides a JSP page that let you execute any Groovy/Java code on the server side, with access to server-side objects like request/session etc.<br><br>Here is a screenshot of my recent troubleshooting session, where I needed to check the state of a session-scoped JSF Managed Bean:<br><br><!--more--><br><br><img class="alignnone" style="border:1px solid black;" title="GroovyConsole usage example" src="https://lh5.googleusercontent.com/-mRxdoK2fHRg/ToIehv0gmWI/AAAAAAAACLA/y2jUa1j3LnQ/s800/GroovyConsole-1.0-1.jpg" alt="" width="800" height="462" /><br><br>(Notice that the screenshot uses heavily the beauties of Groovy though you could use the ordinary boring Java too :-).)<br><br>The application is self-explanatory (and pretty small) so just check it <a href="https://sourceforge.net/apps/mediawiki/jeeutils/index.php?title=GroovyConsole_servlet_or_portlet">check it out</a> (and let me know what you think).<br><br>If you would prefer telnet access (and can have the port open) then you may be also interested in the <a href="https://groovy.codehaus.org/Embedding+a+Groovy+Console+in+a+Java+Server+Application">Embedding Groovy article</a>.
++++
