{:title "CKEditor: Hide some toolbar buttons on a per page basis",
 :date "2011-04-04",
 :layout :post,
 :tags ["library"],
 :tags-orig ["ckeditor"],
 :categories ["General"],
 :extra-css #{}
}

++++
In my project we had CKEditor with a common toolbar used on many pages and we needed to be able to hide some of the buttons on some pages (e.g. email editor didn't support some functionality/content). It took me a long time to figure a way to do it for CKEditor has no methods for simply removing/hiding buttons from a toolbar. My solution uses the fact that the configuration file can see variables defined in the including page and that it can contain functions - namely there is a function which takes the default toolbar definition and removes from it all the buttons mentioned in a variable, which is expected to be defined in the page.<br><br><!--more--><br><br>The page:
<pre><code>
...
&lt;script type=&quot;text/javascript&quot;&gt;
   // This must be defined before including ckeditor.js:
   var removeButtons = &quot;Link,Preview&quot;;
&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;/mywebapproot/myckeditor/editor/ckeditor.js&quot;&gt;&lt;/script&gt;
...
</code></pre><br><br>My custom CKEditor configuration .js:
<pre><code>
function removeUnwantedTools( toolbar )
{
    if (typeof(removeButtons) == &quot;undefined&quot;) { return toolbar; }<br><br>    var filteredTools = new Array();
    for(var i = 0, len = toolbar.length; i &lt; len; i++)
    {
        var element = toolbar[i];
        if (element instanceof Array)
        {
            filteredTools.push(
                removeUnwantedTools(element)); //perhaps don't add if empty
        }
        else if (removeButtons.indexOf(element) == -1)
        {
            filteredTools.push(element);
        }
        // else just ignore the element present on the removeButtons list
    }
    return filteredTools;
}<br><br>CKEDITOR.editorConfig = function( config ) {
   ...
    config.toolbar_Default = removeUnwantedTools([
        ['Preview', 'Source','Link'],['MyPlugin', 'AnotherCustomPlugin']
    ]);
   ...
}
</code></pre><br><br>The result will be that this plugin will only have the buttons [['Source'],['MyPlugin', 'AnotherCustomPlugin']].<br><br>It is not completely fool-proof but worked well for me.
++++
