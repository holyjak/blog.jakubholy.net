{:title "CKEditor: Collapsing only 2nd+ toolbar rows - howto",
 :date "2011-04-01",
 :layout :post,
 :tags ["webdev" "JavaScript" "library"],
 :tags-orig ["ckeditor" "JavaScript" "UI"],
 :categories ["General"],
 :extra-css #{}
}

++++
Normally CKEditor (v3.5.2) hides/shows all the toolbar buttons when you press the collapse/expand button but I needed to always show the first row with "basic tools" and only collapse the second and following rows with advanced functionality tool buttons. CKEditor doesn't have proper support for that but there is a simple workaround.<br><br><strong>Update: Example solution (CKEditor 3.6.1) published</strong>, <a href="https://github.com/holyjak/ex-ckeditor-collapsable-toolbar/commit/98404375dafaea0003896e9a998594effc33a400">see the changes done</a> or <a href="https://github.com/holyjak/ex-ckeditor-collapsable-toolbar/archives/98404375dafaea0003896e9a998594effc33a400">download the full source</a> and open _samples/replacebyclass.html.<br><br><!--more-->
<h2>Introduction</h2>
The trick is to override the command <em>toolbarCollapse</em> not to hide the complete toolbox but only specific toolbars. Let's see what the toolbox looks like:<br><br><a href="https://lh5.googleusercontent.com/_btcPMCQkYvg/TZXFLqZ9u7I/AAAAAAAABp8/RdTYWdkYaCo/s800/ckeditor-toolbar.png" target="_blank"><img title="CKEditor 3.5.2 toolbox" src="https://lh5.googleusercontent.com/_btcPMCQkYvg/TZXFLqZ9u7I/AAAAAAAABp8/RdTYWdkYaCo/s400/ckeditor-toolbar.png" alt="" width="400" height="45" /></a><br><br>The whole thing you can see on the image is the toolbox, which contains the following elements:
<ul>
	<li>1 &amp; 2: a list of toolbars including optional line breaks to spread the toolbars across multiple lines; a toolbar may contain one or more buttons, such as (B I U) in the toolbar marked as #4</li>
	<li>Collapser - the button used to collapse and expand the toolbox</li>
</ul>
The (generated) source code is something like this:<br><br><pre><code>
&lt;td class=&quot;cke_top&quot; id=&quot;cke_top_newedittextarea&quot;&gt;
  &lt;div class=&quot;cke_toolbox&quot;&gt;
    &lt;span id=&quot;cke_6&quot; class=&quot;cke_voice_label&quot;&gt;Toolbar&lt;/span&gt;
    &lt;span id=&quot;cke_7&quot; class=&quot;cke_toolbar&quot;&gt;...&lt;/span&gt;
    ...
    &lt;div class=&quot;cke_break&quot;&gt;
    &lt;span id=&quot;cke_29&quot; class=&quot;cke_toolbar&quot;&gt;&gt;...&lt;/span&gt;
    ...
  &lt;/div&gt;
  &lt;a id=&quot;cke_61&quot; class=&quot;cke_toolbox_collapser&quot; title=&quot;Collapse Toolbar&quot;&gt;▲&lt;/a&gt;
&lt;/td&gt;<br><br></code></pre><br><br>The CKEditor's tool area, represented by a td, contains the toolbars contained in a div.cke_toolbox (#2) and a link representing the collapser (#10). The toolbox contains various elements, mostly span.cke_toolbar, representing the individual toolbars (such as #4 above), and some special ones such as div.cke_break (#6), which splits the toolbars into multiple lines.
<h2>Implementation</h2>
To hide only the second and following rows, we will go through the list of toolbox' children and hide() each starting with the first div.cke_break. Add the following into your <a href="https://docs.cksource.com/CKEditor_3.x/Developers_Guide/Setting_Configurations">CKEditor’s configuration</a>:<br><br><pre><code>
config.toolbarStartupExpanded = false;
</code></pre><br><br>and add there or somewhere else also the following:<br><br><pre><code>
/**
 * Override the default 'toolbarCollapse' command to hide
 * only toolbars in the row two and onwards.
 */
CKEDITOR.on('instanceReady', function(e) {<br><br>    function switchVisibilityAfter1stRow(toolbox, show)
    {
        var inFirstRow = true;
        var elements = toolbox.getChildren();
        var elementsCount = elements.count();
        var elementIndex = 0;
        var element = elements.getItem(elementIndex);
        for (; elementIndex &lt; elementsCount; element = elements.getItem(++elementIndex))
        {
            inFirstRow = inFirstRow &amp;&amp; !(element.is('div') &amp;&amp; element.hasClass('cke_break'));<br><br>            if (!inFirstRow)
            {
                if (show) element.show(); else element.hide();
            }
        }
    }<br><br>    var editor = e.editor;
    var collapser = (function()
    {
        try
        {
            // We've HTML: td.cke_top {
            //  div.cke_toolbox {span.cke_toolbar, ... }
            //  , a.cke_toolbox_collapser }
            var firstToolbarId = editor.toolbox.toolbars[0].id;
            var firstToolbar = CKEDITOR.document.getById(firstToolbarId);
            var toolbox = firstToolbar.getParent();
            var collapser = toolbox.getNext();
            return collapser;
        }
        catch (e) {}
    })();<br><br>    // Copied from editor/_source/plugins/toolbar/plugin.js &amp; modified
    editor.addCommand( 'toolbarCollapse',
    {<br><br>        exec : function( editor )
        {
            if (collapser == null) return;<br><br>            var toolbox = collapser.getPrevious(),
            contents = editor.getThemeSpace( 'contents' ),
            toolboxContainer = toolbox.getParent(),
            contentHeight = parseInt( contents.$.style.height, 10 ),
            previousHeight = toolboxContainer.$.offsetHeight,<br><br>            collapsed = toolbox.hasClass('iterate_tbx_hidden');//!toolbox.isVisible();<br><br>            if ( !collapsed )
            {
                switchVisibilityAfter1stRow(toolbox, false);    // toolbox.hide();
                toolbox.addClass('iterate_tbx_hidden');
                if (!toolbox.isVisible()) toolbox.show(); // necessary 1st time if initially collapsed<br><br>                collapser.addClass( 'cke_toolbox_collapser_min' );
                collapser.setAttribute( 'title', editor.lang.toolbarExpand );
            }
            else
            {
                switchVisibilityAfter1stRow(toolbox, true);    // toolbox.show();
                toolbox.removeClass('iterate_tbx_hidden');<br><br>                collapser.removeClass( 'cke_toolbox_collapser_min' );
                collapser.setAttribute( 'title', editor.lang.toolbarCollapse );
            }<br><br>            // Update collapser symbol.
            collapser.getFirst().setText( collapsed ?
                '\u25B2' :		// BLACK UP-POINTING TRIANGLE
                '\u25C0' );	// BLACK LEFT-POINTING TRIANGLE<br><br>            var dy = toolboxContainer.$.offsetHeight - previousHeight;
            contents.setStyle( 'height', ( contentHeight - dy ) + 'px' );<br><br>            editor.fire( 'resize' );
        },<br><br>        modes : {
            wysiwyg : 1,
            source : 1
        }
    } )<br><br>    // Make sure advanced toolbars initially collapsed
    editor.execCommand( 'toolbarCollapse' );
});
</code></pre><br><br>Explanation:
<ul>
	<li><strong>General</strong>: When the editor finishes its initialization, i.e. on the instanceReady event, we override the default toolbarCollapse command, defined in the toolbar plugin</li>
	<li>#07 function <strong>switchVisibilityAfter1stRow</strong>: A utility function to hide/show the toolbars that follow the first row of toolbars (including the line-break element)
<ul>
	<li>#16 We start hiding/showing with the first div element having the class cke_break, which CKEditor uses to force line breaks</li>
	<li>#20 The actual change of visibility</li>
	<li>Notice that the elements are instances of <a href="https://www.churchcmshosting.com/ckeditor/_docs/api/symbols/CKEDITOR.dom.element.html">CKEditor.dom.element </a></li>
</ul>
</li>
	<li>#26 <strong>collapser lookup</strong>: It's little complicated to locate the collapser for we have no way of learning its ID. Fortunately the editor object has some kind of object representation of its toolbox and toolbars. These are not the CKEditor.dom.elements we need but contain the actual ids, so we can get the id of a toolbar, use it to get its dom.element, and get the parent toolbox and its sibling collapser.</li>
	<li>#43 the actual <strong>re-definition of the toolbarCollapse command</strong>:
<ul>
	<li>Only the highlighted lines have been added or changed, the rest is copied from the toolbar plugin.</li>
	<li>#48 We use the collapser element located above instead of finding it by its (unknown to us) id, as the original function did.</li>
	<li>#56, #61,70: We use a custom class - iterate_tbx_hidden - to make it easy to detect the current state.</li>
	<li>#62: A trick to show the toolbar hidden by having set config.toolbarStartupExpanded to false, explained later</li>
</ul>
</li>
	<li>#94 executing the command to display only the first toolbars row: explained below</li>
</ul>
<h3>Trick: Not hiding visible buttons while the user looks</h3>
We want to have the "advanced" buttons initially collapsed. If you tried to achieve it simply by calling editor.execCommand( 'toolbarCollapse' ) at the end of the instanceReady event handler then the user would initially see all rows, which would be then collapsed. This is little strange experience, we would prefer to hide the advanced rows before they are displayed. This is how to do it:
<ol>
	<li>Tell CKEditor to initially collapse the toolbox (config.toolbarStartupExpanded=false). This happens before the instanceReady event and thus it executes the original toolbarCollapse command, which works by invoking hide() on the toolbar container (div.cke_toolbox). So all buttons will be hidden.</li>
	<li>However our new toolbarCollapse, which we invoke after instanceReady, will believe that the toolbox is not collapsed before it won't find the special marker class iterate_tbx_hidden on the toolbox. Little strangely it will anyway do exactly what we want: hide the 2nd row of buttons and set the collapser to the collapsed position (actually it just keeps it). We need only one thing more and that is to show the currently hidden content of the toolbox (line #62).</li>
</ol>
<h2>Conclusion</h2>
It is little cumbersome to make it possible to collapse/expand only the 2nd+ rows but it is possible. There are certainly other - and better - ways to do it but this worked fine for me.
++++
