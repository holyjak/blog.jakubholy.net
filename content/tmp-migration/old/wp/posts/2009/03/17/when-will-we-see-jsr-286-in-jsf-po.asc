{:title "When will we see JSR 286 in JSF portlets?",
 :date "2009-03-17",
 :layout :post,
 :tags [],
 :tags-orig [],
 :categories ["Portlets"],
 :extra-css #{}
}

++++
<p>Since June 2008 we have the final release of Portlet 2.0 (<a href="https://jcp.org/en/jsr/detail?id=286">JSR 286</a>) specification bringing the long sought after features like inter-portlet communication (IPC - events, shared/public render parameters), support for Ajax (resource request), portlet filters and more. It's already implemented in the latest versions of leading portals including Liferay 5.0, JBoss 2.7, Websphere 6.1 (though you can still encounter some bugs). </p><p>Now we would like to know when the lovers of JSF will be able to profit from these features in their JSF portlets.<br /></p><h2>Current state</h2><p>Currently it's possible to embed a JSF 1.2 application into a <a href="https://jcp.org/en/jsr/detail?id=168">JSR 168</a> portal using a Portlet Bridge 1.0  (<a href="https://jcp.org/en/jsr/detail?id=301">JSR 301</a>). This is all still quite new - JSR 301 is only a proposed final draft as of June 8th 2009. So you can expect that it will take time to see also support for JSR 286 (or the upcoming <a href="https://jcp.org/en/jsr/detail?id=314">JSF 2.0</a>).</p><p>Note: Of course you can run JSF portlet bridge 1.0 applications in JSR 286 compliant portals but won't have an easy access to the new features.<br /></p><h2>Future</h2><p>A specification of&nbsp;<a href="https://cds.sun.com/is-bin/INTERSHOP.enfinity/WFS/CDS-CDS_JCP-Site/en_US/-/USD/ViewProductDetail-Start?ProductRef=portlet_2_0_bridge-ea-oth-JSpec@CDS-CDS_JCP"> Portlet Bridge 2.0</a> that would bring JSR 286 to the JSF world is being born but it's still so young that it even hasn't a JSR number yet. While creating the specification for Portlet Bridge 1.0 took 2-3 years we may hope that 2.0 could be faster as the foundation is already laid by 1.0 but still it will surely take at least half a year, much more likely a year or more. For the time being the only option is to take any of the open source implementations and try to hack the feature you need.</p><p><b>Update</b>: The <a href="https://jcp.org/en/jsr/detail?id=329">JSR for Portlet 2.0 Bridge for JSF 1.2 is #329</a> (thanks, balz).<br /></p><h2> Implementations</h2><p><b>MyFaces</b> Portlet Bridge 2.0, a reference implementation of the new specification being formed, already has some <a href="https://myfaces.apache.org/portlet-bridge/2.0/index.html">alpha code</a>. They're quite ahead of time :-)</p><p>According to some posts <b>WebSphere Portal 6.1</b> implementation of portlet bridge <a href="https://www.ibm.com/developerworks/forums/thread.jspa?threadID=230393&amp;tstart=0">seems to support JSR 286</a> though it is not yet perfect.</p><p><a href="https://www.jboss.org/portletbridge/">JBoss Portlet Bridge</a> (now 1.0.0 beta 6) and <a href="https://jsfportletbridge.dev.java.net/">Sun JSF Portlet Bridge</a> (1.2.3, 8/2008) plan this perhaps in their 2.0 versions. We can also see that the authors of <a href="https://jira.icefaces.org/browse/ICE-3419">ICEFaces plan to incorporate this</a> in v2.0 (currently 1.8.0RC1), but likely all of them depend on the specification coming to some stable state.</p><p>But a limited support is already available, for instance you can use<a href="https://blogs.sun.com/deepakg/entry/jsf_portlet_and_public_render"> public render parameters in JSF Portlet Bridge</a>.</p><h2>Summary</h2><p>It will take at least months to have a JSR 286 enabled Portlet Bridge buth work is already under way.<br /></p>
++++
