{:title "Seam Tutorial 1.2: RichFaces and paged table (datascroller)",
 :date "2009-03-23",
 :layout :post,
 :tags ["library"],
 :tags-orig ["jsf" "jsr168" "jsr286" "portlet" "RichFaces" "seam"],
 :categories ["Portlets"],
 :extra-css #{}
}

++++
In this two-part tutorial you will
learn how to get started with the development of Seam applications
with RichFaces using Eclipse with JBoss Tools. In <a href="/2009/03/07/seam-tutorial-1-1-richfaces-and-pa/">the 1<sup>st</sup>
part</a> we've set up our environment, created, and run an empty shell
Seam application. In this 2<sup>nd</sup> part we will create a simple
web page with a table presenting data on multiple pages using Ajax (a
RichFaces component) and its model stored as a POJO Component in the
Seam Conversation scope. I assume that you already have some basic
knowledge of Seam and JSF, for instance that you know what a
Component or the Conversation scope are. I'll present my path to this
goal with all the mistakes so that you too can learn from them.
<p style="margin-bottom:0;">My aim in this tutorial series is to
create a Seam portlet displaying data in a paged (and ideally also
sortable and filterable, but lets be realistic) table running in the
Liferay portal.</p>
<!--more-->
<h3 class="western">Attempt 1: The straightforward version</h3>
First we will create a new Seam project in exactly the same way as
in part 1.1, the only difference being that we will call it
seamTutorial12. Or you can reuse the existing project. I will not
repeat the steps here, you can refer to the previous post.<br><br><em>TIP: Cleaning of the jboss deploy folder doesn't work very well
(event with the Clean button in the JBoss Server View). You may need
to help it by undeploying all projects and manually deleting contents
of deploy/ in the JBoss folder, which is, for a server named
JBoss_4.2.3, &lt;eclipse
workspace&gt;/.metadata/.plugins/org.jboss.ide.eclipse.as.core/JBoss_4.2.3/.
An alternative is to create a new server.</em><br><br><em>Note: When working offline you may get exceptions due to
<a href="https://www.w3.org/">www.w3.org</a> being unreachable, which
will prevent the deployment of
jboss-portal.sar/portal-wsrp.sar/portal-wsrp.war/. This is nothing to
worry about.</em>
<h4 class="western">Create a component and a page</h4>
Assuming that you have the project seamTutorial12 created and
running, we will add a new component and page to it for our
experiments.<br><br>File &gt; New &gt; Seam Action
<ul>
	<li>Type the Seam component name <em>richTable</em> and accept the
defaults (it would be better to apply a reasonable naming standard
but let's keep it simple).</li>
	<li>Finish.</li>
	<li>Note: We could also select Seam Form, which would create a
page with a form and button.</li>
</ul>
<img title="Screenshot - New Seam Action" src="https://www.jroller.com/holy/resource/seamTutorial12/Screenshot-NewSeamAction.png" alt="" /><br><br>This will create two files:<br><br>1. src/hot/org/domain/seamtutorial12/session/RichTable.java
<pre><code>
package org.domain.seamtutorial12.session;<br><br>import org.jboss.seam.annotations.Name;
import org.jboss.seam.annotations.In;
import org.jboss.seam.annotations.Logger;
import org.jboss.seam.log.Log;
import org.jboss.seam.faces.FacesMessages;<br><br>@Name("richTable")
public class RichTable {
@Logger private Log log;
@In FacesMessages facesMessages;<br><br>public void richTable()
{
   //implement your business logic here
   log.info("richTable.richTable() action called");
   facesMessages.add("richTable");
}<br><br>//add additional action methods
}
</code></pre>
2. WebContent/richTable.xhtml .
<pre><code>
&lt;!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br><br>&lt;ui:composition xmlns="http://www.w3.org/1999/xhtml"
xmlns:s="http://jboss.com/products/seam/taglib" xmlns:ui="http://java.sun.com/jsf/facelets"
xmlns:f="http://java.sun.com/jsf/core" xmlns:h="http://java.sun.com/jsf/html"
xmlns:rich="http://richfaces.org/rich" xmlns:a="http://richfaces.org/a4j"
template="layout/template.xhtml"&gt;<br><br>&lt;ui:define name="body"&gt;<br><br>&lt;h:messages globalOnly="true" styleClass="message" /&gt;<br><br>&lt;rich:panel&gt;
&lt;f:facet name="header"&gt;richTable&lt;/f:facet&gt;
&lt;h:form id="richTableForm"&gt;
&lt;h:commandButton id="richTable" value="richTable!"
action="#{richTable.richTable}" /&gt;
&lt;/h:form&gt;
&lt;/rich:panel&gt;<br><br>&lt;/ui:define&gt;<br><br>&lt;/ui:composition&gt;<br><br></code></pre>
Opening the page in Eclipse will show an editor with a text and
visual views of the page (notice that the selected tag – h:form –
is emphasized in the visual view – the blue line):<br><br><img title="Eclipse - visual and source view of a xhtml page" src="https://jroller.com/holy/resource/seamTutorial12/Screenshot3-Eclipse-richTable-source+visual_page_editor.png" alt="" /><br><br>Go to <a href="https://localhost:8080/seamTutorial12/richTable.seam">http://localhost:8080/seamTutorial12/richTable.seam</a>
to see it:<br><br><img title="New RichTable page in Firefox" src="https://jroller.com/holy/resource/seamTutorial12/Screenshot2-seamTutorial12-vanilla_richTablePage-Firefox.png" alt="" /><br><br>Clicking the button RichTable! should add a message “RichTable”
to the page.
<h4 class="western">Define a table data model</h4>
To use a table we need the data to display in it. JSF requires
data to be provided as an instance of DataModel however we will use a
simple List and let Seam to wrap it into a DataModel. We will add the
following snippet to RichTable.java (plus the necessary imports) to
define the data model property/component rowList and to initialize in
the class' constructor:
<pre>@DataModel
List&lt;String&gt; rowList = new LinkedList&lt;String&gt;();<br><br>public RichTable() {
final Date now = new Date();
rowList.add("row 1 created on " + now);
rowList.add("row 2 created on " + now);
rowList.add("row 3 created on " + now);
}</pre>
<h4 class="western">Create a RichFaces table</h4>
Finally we will create the rich table to display the data.
<ol>
	<li>Double click on richTable.xhtml in Eclipse to open it in the
JBoss Tools HTML Editor.</li>
	<li>In the source view click inside the h:form and in the JBoss
Tools Palette click on JBoss RichFaces – <a href="https://livedemo.exadel.com/richfaces-demo/richfaces/extendedDataTable.jsf?c=extendedDataTable&amp;tab=usage">extendedDataTable</a>. I've selected the extendedDataTable and not the
basic rich:dataTable because the extended one has sorting and
filtering built-in. (You can also add these features to the standard
table using other components.)
The table will be inserted at the
cursor's location.<br><br><img title="Eclipse - adding a RichTable component to the page" src="https://jroller.com/holy/resource/seamTutorial12/Screenshot4-Eclipse-add_extRichTable2page.png" alt="" /></li>
	<li>You could continue with adding columns etc. in this manner
but I leave this up to your playful nature and just provide the
final code that the ones in a hurry can copy&amp;paste.</li>
</ol>
The final code:
<p style="margin-bottom:0;"></p>
<p style="margin-bottom:0;"><span style="color:#008080;"><span style="font-family:Monospace;"><span style="font-size:x-small;">&lt;h:form&gt;</span></span></span></p>
<p style="margin-bottom:0;"><span style="font-family:Monospace;"><span style="font-size:x-small;"><span style="color:#7f007f;"><span style="color:#008080;">&lt;</span><span style="color:#3f7f7f;">rich:extendedDataTable </span><span style="color:#7f007f;">width</span>=<span style="color:#2a00ff;"><em>"483"</em></span> <span style="color:#7f007f;">id</span>=<span style="color:#2a00ff;"><em>"richTable"</em></span> <span style="color:#7f007f;">rows</span>=<span style="color:#2a00ff;"><em>"2"</em></span> <span style="color:#7f007f;">columnClasses</span>=<span style="color:#2a00ff;"><em>"col" </em></span>value</span><span style="color:#000000;">=</span><span style="color:#2a00ff;"><em>"#{rowList}"</em></span> <span style="color:#7f007f;">var</span><span style="color:#000000;">=</span><span style="color:#2a00ff;"><em>"row"</em></span><span style="color:#008080;">&gt;</span></span></span></p>
<p style="margin-bottom:0;"><span style="font-family:Monospace;"><span style="font-size:x-small;"><span style="color:#008080;">&lt;</span><span style="color:#3f7f7f;">f:facet </span><span style="color:#7f007f;">name</span><span style="color:#000000;">=</span><span style="color:#2a00ff;"><em>"header"</em></span><span style="color:#008080;">&gt;</span></span></span></p>
<p style="margin-bottom:0;"><span style="font-family:Monospace;"><span style="font-size:x-small;"><span style="color:#008080;">&lt;</span><span style="color:#3f7f7f;">rich:columnGroup</span><span style="color:#008080;">&gt;
&lt;</span><span style="color:#3f7f7f;">h:column</span><span style="color:#008080;">&gt;
&lt;</span><span style="color:#3f7f7f;">h:outputText</span> <span style="color:#7f007f;">styleClass</span><span style="color:#000000;">=</span><span style="color:#2a00ff;"><em>"headerText"</em></span> <span style="color:#7f007f;">value</span><span style="color:#000000;">=</span><span style="color:#2a00ff;"><em>"A Column"</em></span> <span style="color:#008080;">/&gt;</span></span>
<span style="font-size:x-small;"><span style="color:#008080;"> &lt;/</span><span style="color:#3f7f7f;">h:column</span><span style="color:#008080;">&gt;
</span><span style="color:#008080;">&lt;/</span><span style="color:#3f7f7f;">rich:columnGroup</span><span style="color:#008080;">&gt;</span></span></span></p>
<p style="margin-bottom:0;"><span style="font-family:Monospace;"><span style="font-size:x-small;"><span style="color:#008080;">&lt;/</span><span style="color:#3f7f7f;">f:facet</span><span style="color:#008080;">&gt;</span></span></span></p>
<p style="margin-bottom:0;"><span style="font-family:Monospace;"><span style="font-size:x-small;"><span style="color:#008080;">&lt;</span><span style="color:#3f7f7f;">h:column</span><span style="color:#008080;">&gt;&lt;</span><span style="color:#3f7f7f;">h:outputText</span> <span style="color:#7f007f;">value</span><span style="color:#000000;">=</span><span style="color:#2a00ff;"><em>"#{row}"</em></span> <span style="color:#008080;">/&gt;&lt;/</span><span style="color:#3f7f7f;">h:column</span><span style="color:#008080;">&gt;</span></span></span></p>
<p style="margin-bottom:0;"><span style="font-family:Monospace;"><span style="font-size:x-small;"><span style="color:#008080;">&lt;/</span><span style="color:#3f7f7f;">rich:extendedDataTable</span><span style="color:#008080;">&gt;</span></span></span></p>
<p style="margin-bottom:0;"><span style="font-family:Monospace;"><span style="font-size:x-small;"><span style="color:#008080;">&lt;</span><span style="color:#3f7f7f;">rich:spacer </span><span style="color:#7f007f;">height</span><span style="color:#000000;">=</span><span style="color:#2a00ff;"><em>"30"</em></span> <span style="color:#008080;">/&gt;</span></span></span></p>
<p style="margin-bottom:0;"><span style="font-size:x-small;"><span style="color:#008080;"><span style="font-family:Monospace;">&lt;</span></span><span style="color:#3f7f7f;"><span style="font-family:Monospace;">rich:datascroller </span></span><span style="color:#7f007f;"><span style="font-family:Monospace;">id</span></span><span style="color:#000000;"><span style="font-family:Monospace;">=</span></span><span style="color:#2a00ff;"><span style="font-family:Monospace;"><em>"richTableScroller"</em></span></span> <span style="color:#7f007f;"><span style="font-family:Monospace;">align</span></span><span style="color:#000000;"><span style="font-family:Monospace;">=</span></span><span style="color:#2a00ff;"><span style="font-family:Monospace;"><em>"left"</em></span></span> <span style="color:#7f007f;"><span style="font-family:Monospace;">for</span></span><span style="color:#000000;"><span style="font-family:Monospace;">=</span></span><span style="color:#2a00ff;"><span style="font-family:Monospace;"><em>"richTable"</em></span></span> <span style="color:#7f007f;"><span style="font-family:Monospace;">maxPages</span></span><span style="color:#000000;"><span style="font-family:Monospace;">=</span></span><span style="color:#2a00ff;"><span style="font-family:Monospace;"><em>"20" /</em></span></span><span style="color:#008080;"><span style="font-family:Monospace;">&gt;</span></span></span></p>
<p style="margin-bottom:0;"><a name="DDE_LINK3"></a><span style="color:#008080;"><span style="font-family:Monospace;"><span style="font-size:x-small;">&lt;/h:form&gt;</span></span></span></p>
<p style="margin-bottom:0;">Notice that I've removed the command
button (<span style="color:#3f7f7f;"><span style="font-family:Monospace;"><span style="font-size:x-small;">h:commandButton</span></span></span>),
which we don't need, to make the code cleaner.</p>
<p style="margin-bottom:0;">That's it! Notes:</p><br><br><ul>
	<li>
<p style="margin-bottom:0;">We use a datascroller to have
paging of the table via Ajax. The table is set to display at most 2
rows via its attribute rows=2 thus we should see the 3<sup>rd</sup>
element of our data model on the next page of the table.</p>
</li>
	<li>
<p style="margin-bottom:0;">RichFaces (Ajax) components must
be within a form because its function is based on submitting the
closest enclosing form. (See the RichFaces Developer Guide for
3.1.4.GA, part 5.4.3. Data Processing Options )<strong>.</strong></p>
</li>
</ul>
<h4 class="western">Run the application</h4>
<p style="margin-bottom:0;">Now we can run it. In the JBoss Server
View right-click on seamTutorial12 &gt; Full Publish (though
incremental publish or waiting for JBoss tools to publish the change
automatically should also work).</p>
<p style="margin-bottom:0;">When you access
<a href="https://localhost:8080/seamTutorial12/richTable.seam">http://localhost:8080/seamTutorial12/richTable.seam</a>
you will be surprised to see a Facelets Error page reading:</p><br><br><pre style="margin-bottom:.5cm;">/richTable.xhtml @22,46 &lt;rich:extendedDataTable&gt; Tag Library supports namespace: http://richfaces.org/rich, but no tag was defined for name: extendedDataTable.</pre>
<h4 class="western">Catch #1: JBoss Tools Palette uses newer version of RichFaces than
Seam itself and let you add a component not present in the runtime
version.</h4>
<p style="margin-bottom:0;">The error message above indicates that
Facelets can't find the tag extendedDataTable in the taglib rich.
Indeed if you look in Eclipse in the Package Explorer into
seamTutorial12 &gt; Web App Libraries &gt;
richfaces-ui.jar/META-INF/rich.tld you will not find it there either.
A look inside richfaces-ui.jar/META-INF/MANIFEST.MF reveals that this
version of RichFaces is 3.1.4 GA and not the latest (as of 2/2009)
3.3.0.</p><br><br><h3 class="western">Intermezzo: Get RichFaces demo 3.1.4 GA running</h3>
The RichFaces demo is the best way to learn what its components
can do, how to do it, and to copy the code for that. The online demo
is of the latest version but for Seam 2.0.2 SP1 you would need
RichFaces demo 3.1.4 GA.
<ol>
	<li>Download <a href="https://repository.jboss.com/maven2/org/richfaces/samples/richfaces-demo/3.1.4.GA/richfaces-demo-3.1.4.GA-tomcat6.war">richfaces-demo-3.1.4.GA-tomcat6.war</a></li>
	<li>Download Tomcat 6.0.18.</li>
	<li>Install it to the Tomcat. I've imported the .war into Eclipse
(File &gt; Import) as JSF Project From *.war, defined a Tomcat
server (right click in JBoss Server View &gt; New &gt; Server &gt;
...) , and added the project to the server (JBoss Server View &gt;
[your Tomcat server] &gt; Add and Remove Projects...).</li>
	<li>Perhaps change the ports Tomcat uses so that you can have it
running in parallel with JBoss: double click on the newly created
Tomcat server in the JBoss Server View, change Ports e.g. by
prepending 2 (-&gt; 28080 etc.).</li>
	<li>Start Tomcat.</li>
	<li>Go to
<a href="https://localhost:28080/Richfaces-demo-3.1.4.GA-tomcat6/richfaces/dataTable.jsf?c=dataTable">http://localhost:28080/Richfaces-demo-3.1.4.GA-tomcat6/richfaces/dataTable.jsf?c=dataTable</a>
(or :8080 if you haven't changed the port) and you shall see the
demo .</li>
</ol>
I haven't managed to get the demo running under JBoss but this
solution is fine.
<h3 class="western">Attempt 2: Page valid for the actual RichFaces
version</h3>
<h4 class="western">Create a RichFaces table, version 2 – a basic
rich:dataTable</h4>
Since RichFaces 3.1.4 doesn't have the lovely extendedDataTable we
will give up on sorting and filtering and use the basic
rich:dataTable. The change to the code is trivial, just replace
extendedDataTable with dataTable.
<p style="margin-bottom:0;"><span style="font-family:Monospace;"><span style="font-size:x-small;"><span style="color:#008080;">&lt;</span><span style="color:#3f7f7f;">h:form</span><span style="color:#008080;">&gt;</span></span></span></p>
<p style="margin-bottom:0;"><span style="color:#008080;"><span style="font-family:Monospace;"><span style="color:#7f007f;"><span style="color:#008080;">&lt;</span><span style="color:#3f7f7f;">rich:</span><span style="color:#3f7f7f;"><em><strong>dataTable </strong></em></span><span style="color:#7f007f;">width</span>=<span style="color:#2a00ff;"><em>"483"</em></span> <span style="color:#7f007f;">id</span>=<span style="color:#2a00ff;"><em>"richTable"</em></span> <span style="color:#7f007f;">rows</span>=<span style="color:#2a00ff;"><em>"2"</em></span> <span style="color:#7f007f;">columnClasses</span>=<span style="color:#2a00ff;"><em>"col" </em></span>value</span><span style="color:#000000;">=</span><span style="color:#2a00ff;"><em>"#{rowList}"</em></span> <span style="color:#7f007f;">var</span><span style="color:#000000;">=</span><span style="color:#2a00ff;"><em>"row"</em></span><span style="font-size:x-small;">&gt;
...</span></span></span></p>
<p style="margin-bottom:0;"><span style="font-family:Monospace;"><span style="font-size:x-small;"><span style="color:#008080;">&lt;/</span><span style="color:#3f7f7f;">rich:</span><span style="color:#3f7f7f;"><em><strong>dataTable</strong></em></span><span style="color:#008080;">&gt;</span></span></span></p>
<p style="margin-bottom:0;"><span style="color:#008080;"><span style="font-family:Monospace;"><span style="font-size:x-small;">...</span></span></span></p>
<p style="margin-bottom:0;"><span style="font-size:x-small;"><span style="color:#008080;"><span style="font-family:Monospace;">&lt;/</span></span><span style="color:#3f7f7f;"><span style="font-family:Monospace;">h:form</span></span><span style="color:#008080;"><span style="font-family:Monospace;">&gt;</span></span></span></p>
Modify the .xhtml and save it, JBoss should pick the change up
automatically. (Or do force its publication.) Reload
<a href="https://localhost:8080/seamTutorial12/richTable.seam">http://localhost:8080/seamTutorial12/richTable.seam</a>
in your browser. You may need to wait for some time.<br><br><img title="The first table in a browser" src="https://jroller.com/holy/resource/seamTutorial12/Screenshot6-seamTutorial12-2ndRichTable_empty-Konqueror.png" alt="" /><br><br>Certainly you wonder why the table is empty instead of showing our
3 rows (or actually the first two ones) . The answer is that at the
time the table was being rendered, the data model component rowList
was undefined.
<table border="1" cellspacing="0" cellpadding="4"><col></col>
<tbody>
<tr>
<th valign="top">Issue: Undefined data source during startup</th>
</tr>
<tr>
<td valign="top" bgcolor="#ffff99">When deploying and undeploying projects it may (will) happen that
JBoss Tools get confused and forget to deploy the project's data
source. Normally when you are adding a project, like seamTutorial12,
to a server, you should be able and should do select also its data
source, like /../seamTutorial12-ds.xml. If you haven't the choice or
forget it you will see an error like the following one during the
Seam application startup following its deployment:
<p style="margin-bottom:0;"><span style="color:#000000;"><span style="font-family:Monospace;"><span style="font-size:x-small;">ERROR
[DatasourceConnectionProvider] Could not find datasource:
java:/seamTutorial12Datasource</span></span></span></p>
<p style="margin-bottom:0;"><span style="color:#000080;"><span style="font-family:Monospace;"><span style="font-size:x-small;"><span style="text-decoration:underline;">javax.naming.NameNotFoundException</span></span></span></span><span style="color:#000000;"><span style="font-family:Monospace;"><span style="font-size:x-small;">:
seamTutorial12Datasource not bound</span></span></span></p>
The solution is to deploy the data source manually:
<ol>
	<li>In the Package Explorer, right-click on
/seamTutorial12/resources/seamTutorial12-ds.xml and select Make
Deployable from the context menu, then select the proper target
server from the window that pops up (JBoss_4.2.3)</li>
	<li>In the JBoss Server View. you should now see
/seamTutorial12/resources/seamTutorial12-ds.xml below the server name
and the server's status changed to Started, Republish (if it was
started).</li>
	<li>After republishing or restarting (which may be safer) the
server the error should have been gone. In the log you should
see:
<span style="color:#000000;"><span style="font-family:Monospace;"><span style="font-size:x-small;">INFO
[ConnectionFactoryBindingService] Bound ConnectionManager
'jboss.jca:service=DataSourceBinding,name=seamTutorial12Datasource'
to JNDI name 'java:seamTutorial12Datasource'</span></span></span></li>
</ol>
Notice: On the screenshot there is “Make Undeployable” instead
of Deployable because it's been taken after the step #3, i.e. when
already deployed.
<img title="Manual deployment of a data source" src="https://jroller.com/holy/resource/seamTutorial12/Screenshot6-deploy_datasource.png" alt="" /></td>
</tr>
</tbody>
</table>
<h4 class="western">Lesson learned 1: DataModel needs a Factory
method unless the parent component is also used on the page</h4>
You may have a component that outjects another component as a data
model via the annotation @DataModel on a property. However if the
owning component (richTable) isn't used on a page where the data
model is used, it won't be instantiated and therefore also there will
be nobody to create and outject the data model component (rowList)
itself. Seam is not clever or active enough to understand that to
have the component rowList it must first instantiate richTable.<br><br>The solution is to provide a method annotated with
<span style="color:#646464;"><span style="font-family:Monospace;"><span style="font-size:x-small;">@Factory</span></span></span><span style="color:#000000;"><span style="font-family:Monospace;"><span style="font-size:x-small;">(</span></span></span><span style="color:#2a00ff;"><span style="font-family:Monospace;"><span style="font-size:x-small;">"rowList"</span></span></span><span style="color:#000000;"><span style="font-family:Monospace;"><span style="font-size:x-small;">)</span></span></span>
to tell Seam that to instantiate the rowList component, it must call
this method (which will likely also require instantiation of its
parent component, richTable). See Seam Reference 2.0.2 SP1, chapter
4.8. Factory and manager components.
<h3 class="western">Attempt 3: Tell Seam how to get an instance of
rowList via a @Factory method</h3>
As explained above, we will provide a new method to tell Seam what
to do when #{rowList} is referenced on a page and it doesn't exist
yet. We will move here the initiation code from the parent
component's constructor.
<p style="margin-bottom:0;"><span style="font-family:Monospace;"><span style="font-size:x-small;"><span style="color:#646464;">@Factory</span><span style="color:#000000;">(</span><span style="color:#2a00ff;">"rowList"</span><span style="color:#000000;">)</span></span></span></p>
<p style="margin-bottom:0;"><span style="font-family:Monospace;"><span style="font-size:x-small;"><span style="color:#7f0055;"><strong>public</strong></span><span style="color:#7f0055;"><strong> void</strong></span><span style="color:#000000;"> initRowList() {</span></span></span></p>
<p style="margin-bottom:0;"><span style="color:#000000;"><span style="font-family:Monospace;"><span style="color:#0000c0;">rowList </span>= <span style="color:#7f0055;"><strong>new</strong></span> LinkedList&lt;String&gt;();</span></span></p>
<p style="margin-bottom:0;"><span style="color:#000000;"><span style="font-family:Monospace;"><span style="color:#7f0055;"><strong>final </strong></span>Date now = <span style="color:#7f0055;"><strong>new</strong></span> Date();</span></span></p>
<p style="margin-bottom:0;"><span style="color:#000000;"><span style="font-family:Monospace;"><span style="color:#0000c0;">rowList</span>.add(<span style="color:#2a00ff;">"row1 created on "</span> + now);</span></span></p>
<p style="margin-bottom:0;"><span style="color:#000000;"><span style="font-family:Monospace;"><span style="color:#0000c0;">rowList</span>.add(<span style="color:#2a00ff;">"row2 created on "</span> + now);</span></span></p>
<p style="margin-bottom:0;"><span style="color:#000000;"><span style="font-family:Monospace;"><span style="color:#0000c0;">rowList</span>.add(<span style="color:#2a00ff;">"row3 created on "</span> + now);</span></span></p>
<p style="margin-bottom:0;"><span style="color:#000000;"><span style="font-family:Monospace;"><span style="font-size:x-small;">}</span></span></span></p>
Publishing the change to the server and accessing
<a href="https://localhost:8080/seamTutorial12/richTable.seam">http://localhost:8080/seamTutorial12/richTable.seam</a>
again will finally show the paged table (nearly) as expected. On the
following screenshot you can see both the 1<sup>st</sup> and the 2<sup>nd</sup>
page of the table, the red arrowhead emphasizing the current one:<br><br><img title="1st and 2nd page of the table in a browser" src="https://jroller.com/holy/resource/seamTutorial12/Screenshot7-seamTutorial12-3rdRichTable_both_pages_diff_times-Konqueror.png" alt="" /><br><br>Have you noticed anything strange? Not? Look carefully at the
dates on both pages. You will see that on the first page there is
“row 1 created on Sat Mar 21 0<strong>9:04:27</strong> GMT+01:00 2009”
while on the second one “row 3 created on Sat Mar 21 0<strong>9:06:22</strong>
GMT+01:00 2009”. The times differ even though all the rows were
created at once in the initRowList method!<br><br>The explanation is obvious: When we move to the 2<sup>nd</sup>
page of the table, it triggers a new request to the server and since
the data model only lives during a request, a new one was created
with a new creation time. Coming back to page 1 would show yet later
time. The solution is of course to keep the list in a longer-living
scope and since we've Seam, the best candidate is the Conversation
scope.
<h3 class="western">Attempt 4: Moving the data model into the
Conversation scope to survive across request</h3>
We want to create the rowList data model only once and then simply
access this instance when a user moves through the table's pages. The
motivation is clear – in a normal, non-tutorial scenario we'd load
data from a database and wouldn't want to repeat this operation over
and over again.
<p style="margin-bottom:0;">You've been nice readers and thus I'll
tell you two important things right away without teasing you.</p><br><br><h4 class="western">Lesson learned 2: POJO Components are in the
Event (Request) scope by default</h4>
As opposed to EJB components, plain old Java object components are
stored in the Event scope unless specified otherwise. Don't trust you
friends, don't be lazy, and check the defaults by yourself :-)<br><br>If you're not sure what scope a component is in, you can check it:
<ul>
	<li>In Eclipse in the Seam Component view (Window &gt; Show View
&gt; Other &gt; Seam &gt; Seam Components)<br><br><img title="Eclipse - Seam Components View" src="https://jroller.com/holy/resource/seamTutorial12/Screenshot8-Eclipse-SeamComponentsView.png" alt="" /></li>
	<li>In the server log during startup of a Seam web application,
Seam prints all components it has found together with their scope
and class.</li>
</ul>
To make the component conversation-scoped, we will modify
RichTable.java as follows:
<p style="margin-bottom:0;"><span style="font-family:Monospace;"><span style="font-size:x-small;"><span style="color:#646464;">@Name</span><span style="color:#000000;">(</span><span style="color:#2a00ff;">"richTable"</span><span style="color:#646464;">)
@Scope</span><span style="color:#000000;">(ScopeType.</span><span style="color:#0000c0;"><em>CONVERSATION</em></span><span style="color:#7f0055;">)<strong>
public </strong></span><span style="color:#7f0055;"><strong>class</strong></span><span style="color:#000000;"> RichTable {</span></span></span></p><br><br><h4 class="western">Lesson learned 3: Conversation scope doesn't
exist and behaves as Event scope unless you start a conversation
explicitly.</h4>
It may surprise you (it did surprise me!) but marking a component
as a conversation-scoped is not enough. That's because no
conversation scope actually exists until created explicitly. Normally
Seam creates a new conversation for each request and destroys it when
the request ends, in the very same way as with the Event scope. To
get a truly long-lived conversation you must start it explicitly.<br><br>You can start a conversation in several ways, usually you do it
when an action method is called. But we've no such method, we need a
conversation started as soon as somebody lands on the richTable.seam
page. This is something that can be set in the page configuration
file. You may have a global pages.xml but we will create a separate
configuration file /seamTutorial12/WebContent/richTable.page.xml next
to the page file itself (thanks to the matching names Seam will
understand it's for richTable.xhtml):
<pre>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;page xmlns="http://jboss.com/products/seam/pages"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://jboss.com/products/seam/pages http://jboss.com/products/seam/pages-2.0.xsd"
      login-required="false"
      &gt;<br><br>      <strong>&lt;begin-conversation join="true"/&gt;</strong>
&lt;/page&gt;</pre>
The only important line is &lt;begin-conversation join="true"/&gt;
that tells Seam to start a new or join an existing long-lived
conversation when the page is accessed.
<h4 class="western">Summary</h4>
<ol>
	<li>We marked the component as belonging to the Conversation
scope applying the annotation <span style="color:#646464;"><span style="font-family:Monospace;"><span style="font-size:x-small;">@Scope</span></span></span><span style="color:#000000;"><span style="font-family:Monospace;"><span style="font-size:x-small;">(ScopeType.</span></span></span><span style="color:#0000c0;"><span style="font-family:Monospace;"><span style="font-size:x-small;"><em>CONVERSATION</em></span></span></span><span style="color:#000000;"><span style="font-family:Monospace;"><span style="font-size:x-small;">)</span></span></span>
in the .java file</li>
	<li>We requested that a real conversation is started whenever a
users enters the page richTable.xhtml (.seam) by specifying
begin-conversation join="true" in a new page configuration
file richTable.page.xml.</li>
</ol>
Now you can once again go to
<a href="https://localhost:8080/seamTutorial12/richTable.seam">http://localhost:8080/seamTutorial12/richTable.seam</a>
and you will see that the dates within rows do not change anymore no
matter how you switch the table pages.
<h3 class="western">The final version</h3>
RichTable.java:<br><br><pre><code>package org.domain.seamtutorial12.session;<br><br>import java.util.Date;
import java.util.LinkedList;
import java.util.List;<br><br>import org.jboss.seam.ScopeType;
import org.jboss.seam.annotations.Factory;
import org.jboss.seam.annotations.In;
import org.jboss.seam.annotations.Logger;
import org.jboss.seam.annotations.Name;
import org.jboss.seam.annotations.Scope;
import org.jboss.seam.annotations.datamodel.DataModel;
import org.jboss.seam.faces.FacesMessages;
import org.jboss.seam.log.Log;<br><br>@Name(&quot;richTable&quot;)
@Scope(ScopeType.CONVERSATION)
public class RichTable {<br><br>    @Logger private Log log;<br><br>    @In FacesMessages facesMessages;<br><br>    @DataModel
    List&amp;lt;String&amp;gt; rowList;<br><br>    /**
     * We must provide this factory method to init the rowList instead of
     * initiating it e.g. in a constructor because otherwise it would be
     * uninitialized until this component itself - tichTable - is also
     * used by the page using  rowList.
     * &amp;lt;p&amp;gt;
     * See Seam Reference 2.0.2 SP1, chapter 4.8. Factory and manager components.
     */
    @Factory(&quot;rowList&quot;)
    public void initRowList() {
    	rowList = new LinkedList&amp;lt;String&amp;gt;();
    	final Date now = new Date();
    	rowList.add(&quot;row 1 created on &quot; + now);
    	rowList.add(&quot;row 2 created on &quot; + now);
    	rowList.add(&quot;row 3 created on &quot; + now);<br><br>    	log.info(&quot;initRowList called at &quot; + now);
    }<br><br>}
</code></pre><br><br>richTable.xhtml:<br><br><pre><code>
&lt;!DOCTYPE composition PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
                             &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;ui:composition xmlns=&quot;http://www.w3.org/1999/xhtml&quot;
                xmlns:s=&quot;http://jboss.com/products/seam/taglib&quot;
                xmlns:ui=&quot;http://java.sun.com/jsf/facelets&quot;
                xmlns:f=&quot;http://java.sun.com/jsf/core&quot;
                xmlns:h=&quot;http://java.sun.com/jsf/html&quot;
                xmlns:rich=&quot;http://richfaces.org/rich&quot;
                xmlns:a=&quot;http://richfaces.org/a4j&quot;
                template=&quot;layout/template.xhtml&quot;&gt;<br><br>&lt;ui:define name=&quot;body&quot;&gt;<br><br>    &lt;h:messages globalOnly=&quot;true&quot; styleClass=&quot;message&quot;/&gt;<br><br>    &lt;rich:panel&gt;
        &lt;f:facet name=&quot;header&quot;&gt;richTable&lt;/f:facet&gt;<br><br>        &lt;h:form&gt;
        	&lt;rich:dataTable width=&quot;483&quot; id=&quot;myRichTable&quot; rows=&quot;2&quot; columnClasses=&quot;col&quot;
                value=&quot;#{rowList}&quot; var=&quot;row&quot;&gt;<br><br>                &lt;f:facet name=&quot;header&quot;&gt;
                    &lt;rich:columnGroup&gt;
                        &lt;h:column&gt;
                            &lt;h:outputText styleClass=&quot;headerText&quot; value=&quot;A Column&quot; /&gt;
                        &lt;/h:column&gt;
                    &lt;/rich:columnGroup&gt;
                &lt;/f:facet&gt;<br><br>                &lt;h:column&gt;
                    &lt;h:outputText value=&quot;#{row}&quot; /&gt;
                &lt;/h:column&gt;<br><br>            &lt;/rich:dataTable&gt;<br><br>            &lt;rich:spacer height=&quot;30&quot; /&gt;<br><br>            &lt;rich:datascroller id=&quot;richTableScroller&quot; align=&quot;left&quot;  for=&quot;myRichTable&quot; maxPages=&quot;20&quot; /&gt;
         &lt;/h:form&gt;<br><br>    &lt;/rich:panel&gt;<br><br>&lt;/ui:define&gt;<br><br>&lt;/ui:composition&gt;
</code></pre><br><br>richTable.page.xml<br><br><pre><code>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;page xmlns=&quot;http://jboss.com/products/seam/pages&quot;
      xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
      xsi:schemaLocation=&quot;http://jboss.com/products/seam/pages http://jboss.com/products/seam/pages-2.0.xsd&quot;
      login-required=&quot;false&quot;
      &gt;<br><br>      &lt;begin-conversation join=&quot;true&quot;/&gt;
&lt;/page&gt;
</code></pre>
<h3 class="western">Troubleshooting tips</h3>
<h4 class="western">RichFaces monitoring and troubleshooting</h4>
There are two tools you can use for monitoring Ajax requests and
RichFaces behavior. The first one is the RichFaces tag <a href="https://www.jboss.org/file-access/default/members/jbossrichfaces/freezone/docs/tlddoc/a4j/log.html">a:log</a>
that will display detailed log about what RichFaces is doing, once it
actually starts doing something:<br><br>&lt;a:log level="ALL" popup="false"
width="400" height="200"/&gt;<br><br>I've found this tag useful but not sufficient. I also haven't got
popup=true working (likely a mistake on my part).<br><br>With the addition of the Firefox extension <a href="https://www.getfirebug.com/">FireBug</a>,
a JavaScript/CSS/... debugger and monitor and one of the best free
web development tools, you'll have all you need. Notice that you will
fist need to enable FireBug for the site (localhost) to monitor.
Below you can see FireBug in action observing Post parameters of an
Ajax request (tab “XHR”):<br><br><img title="FireBug, Firefox extension" src="https://jroller.com/holy/resource/seamTutorial12/Screenshot8-Firefox-FireBug.png" alt="" />
<h4 class="western">Tracking Seam conversations</h4>
How do you find out whether an action triggered a new conversation
or remained in an existing conversation? By checking whether the
request parameter <em>cid</em> has changed it's number or not or wasn't
a part of the request at all. This parameter carries a numerical ID
of the current conversation and is always present and unchanged if a
user action is within an existing conversation. (But notice above
that the Ajax request for switching a table page captured by FireBug
doesn't have any such attribute – perhaps some Seam-RichFaces
magic.)
<h3 class="western">Summary</h3>
We have created a conversation scoped Seam component holding a
list of items that are displayed in a paged RichFaces table. We have
also learned what the correct version of RichFaces is and how to get
its demo running and about all the steps required to really get a
component into a persistent conversation scope. Additionally we've
found out what to do when the project's data source isn't deployed
correctly to the server and got to know some troubleshooting tools.
<h3>Update 2009-04-21: Hotdeploy Seam app with Maven</h3>
There is an interesting Maven plugin (under active development) that can perform a hot-deploy of a Seam application to JBoss: <a href="https://code.google.com/p/ctpjava/wiki/MavenSeamHotdeployPluginUsage">Seam Hotdeploy Maven Plugin</a>.
<h3 class="western">Resources</h3>
You can <a href="https://sourceforge.net/project/showfiles.php?group_id=210989&amp;package_id=315228&amp;release_id=669998">download
the complete seamTutorial12 Eclipse projects</a>, namely the project
itself and its companion Seam-generated *-test project. Notice that
the login, home, etc. pages have been generated by Seam and aren't
actually needed for the richTable stuff though their removal would
require some modifications.<br><br><strong>PS:</strong> Please excuse the terrible formatting :-(
++++
