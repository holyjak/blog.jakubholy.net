{:title
 "PatternTesting: Automatically verifying the good application of architectural/design patterns in code",
 :date "2009-09-25",
 :layout :post,
 :tags ["architecture" "testing" "java" "library"],
 :tags-orig ["AOP" "architecture" "java" "patterns" "Testing"],
 :categories ["Languages" "Testing"],
 :extra-css #{}
}

++++
<a href="https://patterntesting.sourceforge.net/">PatternTesting</a> is a mature open-source project that enables you to automatically check at the compile- or run-time that architectural/design/implementation decisions are implemented and bad practices avoided in the code. The main differences from tools like FindBugs and PMD are that you can implement tests spanning multiple files (classes) and that aside of compile-time checks there are also run-time checks (using AOP with ApsectJ) to do things like "ensuring that there are no more than 10 calls to the database per user case" and providing better error messages in the case of e.g. IOException.<br><br>Read more in a The Server Side's <a href="https://www.theserverside.com/news/thread.tss?thread_id=25415">introductory article</a> and on the <a href="https://patterntesting.sourceforge.net/09/doc/whatis.html">project's page</a>.<br><br>I haven't yet the chance to try this out but it really intrigues me.
++++
