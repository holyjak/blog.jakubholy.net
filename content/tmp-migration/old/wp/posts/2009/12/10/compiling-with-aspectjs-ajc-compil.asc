{:title "Compiling with AspectJ's ajc compiler from Maven",
 :date "2009-12-10",
 :layout :post,
 :tags ["java" "library" "tool"],
 :tags-orig ["AOP" "AspectJ" "java" "Maven"],
 :categories ["Languages"],
 :extra-css #{}
}

++++
I needed to compile AspectJ classes (.java with annotations) with ajc and I wanted to have that integrated into the Maven build process. I tried several means, finally finding the one that worked.<br><br>Note: I had to use ajc even though I was using the pure java 5 syntax based on annotations instead of the legacy AspectJ syntax due to <a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=290227">bug in AspectJ</a> (fixed in v. 1.6.6).
<h1>Failed Attempts</h1>
<h2>aspectj-maven-plugin v1.2</h2>
First I tried the AspectJ Maven plugin but it didn't work for me because I had a special need - a project containing only an aspect while the plugin requires, if I remember correctly, also the advised sources to be in the project. A fix is available and should be included in the version 1.3 but the project doesn't seem to be very active so who knows when it will be released. See <a href="https://jira.codehaus.org/browse/MASPECTJ-7">MASPECTJ-7</a>.
<h2>maven-compiler-plugin for aspectj</h2>
Next I tried the maven-compiler-plugin, which supports various back-ends including AspectJ with the dependency on plexus-compiler-aspectj and compilerId set to aspectj. Unfortunately the plexus-compiler-aspectj is quite out of date, supporting only AspectJ 1.3 while I needed 1.6.
<h1>Finally the Success: maven-antrun-plugin</h1>
Being failed by Maven plugins, I had to resort to the standard way of running ajc via Ant. Fortunately Maven has a very good integration of Ant and its tasks.<br><br>The only problem here was that Ant requires ${java.home} to point to JDK (and not JRE) to find javac. It doesn't help to set the envrionmental variable JAVA_HOME to point to the JDK because Maven resets it to $JAVA_HOME/jre in the case - see <a href="https://jira.codehaus.org/browse/MANTRUN-91">MANTRUN-91</a>. The solution is to add tools.jar (which includes javac classes) to maven-antrun-plugin's dependencies.<br><br>The corresponding piece of pom.xml:
<pre>&lt;build&gt;
&lt;plugins&gt;
  &lt;plugin&gt;
    &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;
    &lt;!-- Tell javac not to compile sources for antrun will do it --&gt;
    &lt;configuration&gt;
        &lt;excludes&gt;
            &lt;exclude&gt;**/*.*&lt;/exclude&gt;
        &lt;/excludes&gt;
    &lt;/configuration&gt;
  &lt;/plugin&gt;<br><br>  &lt;plugin&gt;
    &lt;artifactId&gt;maven-antrun-plugin&lt;/artifactId&gt;
    &lt;version&gt;1.3&lt;/version&gt;
    &lt;dependencies&gt;
      &lt;dependency&gt;
        &lt;groupId&gt;sun.jdk&lt;/groupId&gt;
        &lt;artifactId&gt;tools&lt;/artifactId&gt;
        &lt;version&gt;1.5.0&lt;/version&gt;
        &lt;scope&gt;system&lt;/scope&gt;
        &lt;systemPath&gt;${java.home}/../lib/tools.jar&lt;/systemPath&gt;
      &lt;/dependency&gt;
      &lt;dependency&gt;
        &lt;groupId&gt;org.aspectj&lt;/groupId&gt;
        &lt;artifactId&gt;aspectjtools&lt;/artifactId&gt; &lt;!-- apectj ant plugin --&gt;
        &lt;version&gt;1.6.0&lt;/version&gt;
      &lt;/dependency&gt;
    &lt;/dependencies&gt;<br><br>    &lt;executions&gt;
      &lt;execution&gt;
        &lt;phase&gt;compile&lt;/phase&gt;
        &lt;goals&gt;
          &lt;goal&gt;run&lt;/goal&gt;
        &lt;/goals&gt;
        &lt;configuration&gt;
          &lt;tasks&gt;
            &lt;echo&gt;AntRun: Compiling AspectJ classes with ajc, java.home=${java.home}&lt;/echo&gt;
            &lt;taskdef
              resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties"
              classpathref="maven.plugin.classpath" /&gt;<br><br>            &lt;iajc
              srcDir="src/main/java"
              destDir="target/classes"
              verbose="true"
              showWeaveInfo="true"
              source="1.5"
              classpathRef="maven.compile.classpath"
              Xlint="ignore" &gt;<br><br>              &lt;exclude name="eu/ibacz/pbns/util/aspect/ExampleTimingAnnotatedAspect.java"/&gt;
            &lt;/iajc&gt;<br><br>          &lt;/tasks&gt;
        &lt;/configuration&gt;
      &lt;/execution&gt;
    &lt;/executions&gt;
  &lt;/plugin&gt;
&lt;/plugins&gt;
&lt;/build&gt;</pre>
Note: maven-antrun-plugin v1.3 uses Ant 1.7.1 - see http://maven.apache.org/plugins/maven-antrun-plugin/dependencies.html
<h1>Conclusion</h1>
It's a bit tricky but very well possible to run AspectJ compiler instead of javac during a maven build. The most flexible way is to use the AspectJ Ant task and maven-antrun-plugin though in more standard cases the aspectj-maven-plugin can serve you well too.
++++
