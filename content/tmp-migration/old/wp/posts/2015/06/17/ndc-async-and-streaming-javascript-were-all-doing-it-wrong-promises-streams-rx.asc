{:title
 "NDC: Async and Streaming JavaScript, We're All Doing it Wrong! (Promises, Streams, Rx)",
 :date "2015-06-17",
 :layout :post,
 :tags [],
 :tags-orig [],
 :categories ["Uncategorized"],
 :extra-css #{}
}

++++
By Matthew Podwysocki<br><br><h3>Events</h3><br><br>Lot of work (setup, remove listeners ...), not composable.<br><br><h3>Promises</h3><br><br>No way to abort promise in progress. (Me: has to remember to check for errors: <code>then(onOk, onError)</code>.)<br><br>No try-catch-finally; only try-catch.<br><br><h3>Streams</h3><br><br>Node: Stream 1 were terrible (pause/resume unusable, data sent before ready, ...).<br><br><!--more--><br><br>Streams 2: A lot to trip over. Streams 3: Similar.<br><br>WHATWG Streams:<br><br><ul>
<li>focused on low-level I/I, not on object mode</li>
<li>Think Node Streams + Promises</li>
</ul><br><br><h3>Reactive Programming</h3><br><br>Behavior: values over time
Event: discrete phenomena with a value and a time<br><br>"The majority of your asynchronous code is written with just a few <em>flexible</em> functions."<br><br><h4>The general theory of reactivity</h4><br><br><pre><code>                ^
multiple values |   iterable        observable
single value    |   value           promise
                ----------------------------------&amp;gt;
                    sync            async
</code></pre><br><br>Observables: No need for low-level programming, combine existing powerful primitives (<code>debounce</code>, <code>flatMapLatest</code>, ...).<br><br><h3>JS Future</h3><br><br><h4>Async/Await a la C#?</h4><br><br><ul>
<li>for promises</li>
</ul><br><br><h4>Dart: Async progr. with futures and streams</h4><br><br>Futures = promises, streams unify IO and events, mirrors Rx by adding map/... .<br><br><h4>Observables coming to ES2016</h4><br><br>See https://github.com/zenparsing/es-observable/blob/master/README.md<br><br><h3>Resources</h3><br><br><ul>
<li>http://jhusain.github.io/learnrx/</li>
<li>http://rxmarbles.com/ - visual presentation of fns</li>
<li>http://xgrommx.github.io/rx-book/</li>
<li>visual debugger for async code with Rx:
http://jaredforsyth.com/rxvision/</li>
<li>RxJS Pacman game ex.: https://github.com/Reactive-Extensions/RxJS/blob/master/examples/pacman-unicode/index.html (and http://www.sitepoint.com/building-pacman-with-bacon-js/)</li>
</ul>
++++
