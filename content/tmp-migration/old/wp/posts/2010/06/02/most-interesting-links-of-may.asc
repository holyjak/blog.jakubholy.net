{:title "Most interesting links of May",
 :date "2010-06-02",
 :layout :post,
 :tags ["java" "monitoring" "tool" "performance" "data"],
 :tags-orig ["Git" "java" "monitoring" "nosql" "performance"],
 :categories ["General" "Languages" "Top links of month"],
 :extra-css #{}
}

++++
The most interesting stuff I've read in May, in no particular order. You can easily guess I've been working on performance troubleshooting this month :-)
<ul>
	<li><a href="https://blog.couch.io/post/511008668/nosql-is-about">NoSQL is About…</a> - all the things NoSql databases are said to be about (and perhaps are not) and a good overview of the different goals and thus also features of the various implementations</li>
	<li><a href="https://aext.net/2010/05/mind-mapping-overview-benefits-tips-and-tools/">Bulletproof of Mind Mapping: Overview, Benefits, Tips and Tools</a> - the article not only introduces mind maps (a structured way of recording ideas, much less limited than lists) but also describes over 30 desktop and web-based MM tools, both free and commercial (some of the descriptions come from the SW's web, some from the author - the distinction isn't clear)</li>
	<li><a href="https://www.azulsystems.com/blog/cliff-click/2009-09-06-java-vs-c-performanceagain">Java vs. C Performance....Again.</a> (9/2009) - When C(++) is better than Java, when Java is more appropriate, and common flaws in comparions methodologies/false arguments.</li>
	<li><a href="https://reprog.wordpress.com/2010/05/12/still-hatin-on-git-now-with-added-actual-reasons/">Why Learning Git is really, really hard part 1</a> and <a href="https://www.dzone.com/links/still_hatin_on_git_now_with_added_actual_reasons.html">part 2 with actual reasons</a> - because it doesn't care enough for usability (unusual commands, cryptic error messages, impossibly to go to a "simpler use mode"). I'm intrigued by distributed SCM systems and tired of not-so-easy branching &amp; merging in SVN and its lovely problems with corrupted metadata (when you delete a folder...) and thus I was considering switching to Git that <a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=249745#c25.">everybody is so excited about</a>. I still plan that but these articles warned me that it may be not so painless and easy. A good read.</li>
	<li><a href="https://java.sun.com/community/javavisualvm/">Java VisualVM Blogging Contest results</a> - the best posts -
<ul>
	<li>VisualVM - tool for profiling Java applications - nice, short intro with many pictures</li>
	<li>Analyzing Memory Leak in Java Applications using VisualVM</li>
	<li>(and others ... )</li>
</ul>
</li>
	<li><a href="https://www.johndcook.com/standard_deviation.html">How to compute running mean/standard deviation</a> -  this page explains and in C implements an algorithm for computing a running estimate of mean and standard deviation, which minimizes accumulation of precision errors. A running estimation has the advantage that you do not need to store all the numbers and is thus suitable e.g. for continuous performance monitoring with a low memory overhead (buth the performance overhead of a division and multiplication it introduces is perhaps also something to consider - though for most application it's negligible)</li>
	<li>(Java) <a href="https://www.dzone.com/links/r/web_performance_in_seven_steps_2.html">Web performance in seven steps</a> - a great article about the "management of performance" of a Web/JEE application from the definition of performance requirements up to continual performance monitoring with interesting war stories and links to various useful tools. I can sign the author's maxim "measure, don't guess!". The Java monitoring API <a href="https://code.google.com/p/javasimon/">Java Simon</a> mentioned in the article is worth a look.</li>
</ul>
++++
