{:title
 "Ivy resolve downloads but ignores some artifacts (though not modules)",
 :date "2010-12-23",
 :layout :post,
 :tags ["java" "tool"],
 :tags-orig ["classpath" "issue" "ivy"],
 :categories ["Tools"],
 :extra-css #{}
}

++++
I've had a strange issue with <a href="https://ant.apache.org/ivy/">Apache Ivy</a>'s <a href="https://ant.apache.org/ivy/history/latest-milestone/use/resolve.html">resolve task</a> - it resolved and downloaded all my dependencies but didn't put some of them to the classpath (via ivy:cachepath) and certainly wouldn't copy them either (via ivy:retrieve). An indicia was that in the resolve report the number of "artifacts" was zero while the number of "modules" matched the number of the dependencies. The issue was caused by my defaultconfmapping="*-&gt;compile" - it turned out that most modules, as interpreted by Ivy, produce their artifacts only for the configuration "master" and not for compile.<br><br><!--more--><br><br>In my case, with <em>ivy.xml</em> (definition of the configurations compile, provided, and test not shown) containing<br><br><pre><code>
...
&lt;dependencies defaultconf=&quot;compile&quot;&gt;
   &lt;dependency conf=&quot;provided&quot; org=&quot;log4j&quot; name=&quot;log4j&quot; rev=&quot;1.2.14&quot; /&gt;
   &lt;dependency conf=&quot;test&quot; org=&quot;net.jakubholy.testing&quot; name=&quot;dbunit-embeddedderby-parenttest&quot; rev=&quot;1.1.0&quot; /&gt;
    &lt;dependency conf=&quot;test&quot; org=&quot;org.mockito&quot; name=&quot;mockito-all&quot; rev=&quot;1.8.5&quot; /&gt;
 &lt;/dependencies&gt;
...
</code></pre><br><br>the test-scoped dependencies <em>net.jakubholy.testing:dbunit-embeddedderby-parenttest:1.1.0</em> and <em>org.mockito:mockito-all:1.8.5</em> were included in the classpath together with their dependencies as expected while <em>log4j:log4j:1.2.14</em> was ignored no matter what I did (even changing its conf to test).<br><br>The problem was indicated by &lt;ivy:resolve /&gt; producing an output like:<br><br><pre><code>
[ivy:resolve] :: resolution report :: resolve 951ms :: artifacts dl 20ms
	---------------------------------------------------------------------
	|                  |            modules            ||   artifacts   |
	|       conf       | number| search|dwnlded|evicted|| number|dwnlded|
	---------------------------------------------------------------------
	|      compile     |   0   |   0   |   0   |   0   ||   0   |   0   |
	|       test       |   13  |   0   |   0   |   1   ||   10  |   0   |
	|     provided     |   1   |   0   |   0   |   0   ||   0   |   0   |
	|      runtime     |   0   |   0   |   0   |   0   ||   0   |   0   |
	---------------------------------------------------------------------
</code></pre><br><br>- notice that the number of provided modules is 1 but provided artifacts is 0
<h2>Troubleshooting</h2>
Checking the <strong>resolve report</strong> in <em>&lt;user home&gt;/.ivy2/cache/resolved-&lt;org&gt;-&lt;artifact&gt;-&lt;revision&gt;.xml </em>revealed the full definition of configurations (included from another file), dependencies and especially dependencies/defaultconfmapping, which was rather useful later. The defaultconfmapping<br><br><pre><code>...
&lt;dependencies defaultconf=&quot;compile&quot; defaultconfmapping=&quot;*-&gt;compile&quot;&gt;
...</code></pre><br><br>seemed to be OK but was not, as further exploration revealed.<br><br>Next I've checked the <strong>Ivy descriptor for the log4j</strong> "module" generated by Ivy from its pom.xml in .ivy2/cache/log4j/log4j/ivy-1.2.14.xml and its publications tag caught my eye:<br><br><pre><code>...
&lt;publications&gt;
   &lt;artifact name=&quot;log4j&quot; type=&quot;jar&quot; ext=&quot;jar&quot; conf=&quot;master&quot;/&gt;
   &lt;artifact name=&quot;log4j&quot; type=&quot;source&quot; ext=&quot;jar&quot; conf=&quot;sources&quot; m:classifier=&quot;sources&quot;/&gt;
&lt;/publications&gt;
...</code></pre><br><br>- notice that <em><strong>the JAR artifact (i.e. log4j.jar) is produced only for the configuration 'master'</strong></em>! But due to the innocently looking default mapping of "*-&gt;compile" we are taking into account only artifacts produced in the configuration "compile", which is zero. Mystery solved!
<h2>Fix</h2>
The fix (not necessarily the best one) is to include all configurations of interest in the default mapping (either on <em>dependencies</em> or on <em>configurations</em> in ivy.xml):<br><br><pre><code>&lt;dependencies defaultconf=&quot;compile&quot; defaultconfmapping=&quot;*-&gt;compile,master,default&quot;&gt;</code></pre>
++++
