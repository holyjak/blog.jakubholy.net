{:title "How to Create Maintainable Acceptance Tests",
 :date "2012-01-18",
 :layout :post,
 :tags ["testing" "opinion"],
 :tags-orig ["maintainability" "opinion" "SbE" "Testing"],
 :categories ["Testing"],
 :extra-css #{}
}

++++
This post summarizes what I've learned from various sources about making acceptance or black-box tests maintainable. This topic is of great interest to me because I believe in the benefits that acceptance tests can bring (such as <a href="https://specificationbyexample.com/key_ideas.html">living documentation</a>) but I'm also very much aware that it is all too easy to create an unmaintainable monster whose weight eventually crushes you. So the question is how to navigate the minefield to get to the golden apple?<br><br>The key elements that contribute to the maintainability of acceptance tests are:<br><br><ol>
    <li><strong>Aligned business, software, and test models</strong> =&gt; small change in business requires only a similarly small change in the software and a small change in tests (Gojko Adzic explains that very well in his JavaZone 2012 talk <a href="https://vimeo.com/28722624">Long-term value of acceptance tests</a>)
<ul>
    <li>The key to gaining the alignment is to use business language in all the three models from the very start, building them around business concepts and relationships</li>
</ul>
</li>
    <li><strong>Testing under the surface level</strong>, if possible
<ul>
    <li>Prefer to test your application via the service layer or at worst the servlet layer; only test on the UI level if you really have to and only as little as possible for UI is much more brittle (and also difficult to test)</li>
    <li>The more you want to test the more you have to pay for it in the terms of maintenance effort. Usually you decide so that you cover the part(s) of the application where the most risk is - the best thing is to do cost-benefit evaluation.</li>
</ul>
</li>
    <li><strong>Isolating tests from implementation</strong> by <a href="https://concordion.org/Technique.html">layers of test abstraction</a>
<ul>
    <li>Top layer: Acceptance tests should only describe "what" is tested and never "how" to test it. You must avoid <a href="https://concordion.org/ScriptingMakeover.html">writing scripts instead of specifications</a>.</li>
    <li>Layer 2: Instrumentation - right below the acceptance test is an instrumentation layer, which extracts input/output data from the test and defines how to perform the test via a high-level API, provided by the next level (we could say a test DSL) such as "logInUser(X); openAccountPage();"</li>
    <li>Layer 3: High-level test DSL: This layer contains all the implementation details and exposes to the higher layer high-level primitives that it can use to compose the tests without depending on implementation details (ex.: logInUser may use HtmlUnit to load a page, fill a form, post it). See the PageObject example below.</li>
</ul>
</li>
</ol><br><br>(And of course many, if not all, of the <a href="/2011/11/21/principles-for-creating-maintainable-and-evolvable-tests/">rules for creating maintainable unit tests</a> apply as well.)<br><br><!--more--><br><br><h2>Maintainability vs. easy of writing</h2><br><br>As <a href="https://www.javacodegeeks.com/2015/01/challenging-myself-with-copliens-why-most-unit-testing-is-waste.html/comment-page-1/#comment-47413">James Coplien points out</a>, it might be better to focus on making it easy to write a test quickly rather than on maintainability - f.ex. by making it easy to get the system into the state where you can access/test a feature and adding hooks that enable you to observe the state of the system (and thus simplify verification of results). You can f.ex. also break a system into a set of smaller systems. &lt;=&gt; does the architecture support the right kind granularity and level of product increment changes?<br><br><h2>What others have to say</h2><br><br>On the three layers of test isolation:<br><br><blockquote>
<ol>
    <li>Business rule or functionality level: what is this test demonstrating or exercising. Ideally illustrated with realistic key examples. For example: Free delivery is offered to customers who order two or more books, illustrated with an example of a customer who orders one book and doesn't get free delivery and an example of a customer who orders two books and gets free delivery.</li>
    <li>User interface workflow level: what does a user have to do to exercise the functionality through the UI, on a higher activity level. For example, put the specified number of books in a shopping cart, enter address details, verify that delivery options include or not include free delivery as expected.</li>
    <li>Technical activity level: what are the technical steps required to exercise the functionality. For example, open the shop homepage, log in with testuser and testpassword go to the /book page, click on the first image with the book CSS class, wait for page to load, click on the ‘Buy now’ link and so on.</li>
</ol>
(<em>The Secret Ninja Cucumber Scrolls, page 109 - 110</em>)</blockquote><br><br>On isolating tests from implementation in Selenium web UI tests by <a href="https://code.google.com/p/selenium/wiki/PageObjects">modelling pages with PageObjects</a>, exposing services (e.g. "hasUnreadEmail", "loginExpctingFailure") and hiding the low-level implementation details:<br><br><blockquote><a href="https://code.google.com/p/selenium/wiki/PageObjects">PageObjects</a> can be thought of as facing in two directions simultaneously.  Facing towards the developer of a test, they represent the <strong>services</strong> offered by a particular page. Facing away from the developer, they should be the only thing that has a deep knowledge of the structure of the HTML of a page (or part of a page)</blockquote><br><br>The <a href="https://thoughtworks.fileburst.com/assets/thoughtworks-tech-radar-march-2012-us-color.pdf">ThoughtWorks Technology Radar 3/2012</a> promotes <em>testing at the appropriate level</em> (marked as suitable for adoption) while having <em>test recorders</em> "on hold" with this comments:<br><br><blockquote>[...], has encouraged widespread use of acceptance testing at the browser level. This unfortunately encouraged doing the bulk of testing where the cost to run the tests is the greatest. Instead, we should <strong>test at the appropriate level</strong>, as close to the code as possible, so that tests can be run with maximum efficiency. Browser-level tests should be the icing on the cake, supported by acceptance and unit tests executed at appropriate layers.<br><br><strong>Test recorders</strong> seem invaluable as they provide a quick way to capture navigation through an application. However, we strongly advise against their regular use, as it tends to result in brittle tests which break with small changes to the UI. The test code they produce tends to be relatively poor and riddled with unnecessary duplication. Most importantly, test recorders tend to cut channels of communication between the test automation and development teams. When faced with an application that is difficult to test through the user interface, the solution is to have a critical conversation between the teams to build a more testable UI.</blockquote><br><br>On aligned business, software and test models:<br><br><blockquote>The principle of symmetric change
The best software is the one where the technical software model is aligned with the relevant business domain model. This ensures that one small change in the business domain (new requirements or changes to existing features) results in one small change in software. The same is true for the other artefacts produced for software — tests and documentation. When the tests are aligned with the business domain model, one small change in business will result in one small change in tests, making the tests easy to maintain.
Tests described at a low level technical detail, in the language of technical UI interactions, are everything but aligned with a business model. If anything, they are aligned with the current design and layout of user interfaces. A small change in business requirements can have a huge impact on such tests, requiring hours of updates to tests after just a few minutes of changes to the code.<br><br>(<em>The Secret Ninja Cucumber Scrolls, page 111</em>)</blockquote><br><br><h2>Resources</h2><br><br>This post is very much based on the following resources:<br><br><ol>
    <li><a href="https://cuke4ninja.com/download.html">The Secret Ninja Cucumber Scrolls</a> (free pdf) by David de Florinier and Gojko Adzic, 2011-03-16</li>
    <li><a href="https://concordion.org/">http://concordion.org/</a> by David Peterson</li>
    <li><a href="https://specificationbyexample.com/">Specification by example</a>, Gojko Adzic, 2011, Manning, ISBN 978-1617290084</li>
    <li><a href="https://vimeo.com/28722624">Long-term value of acceptance tests</a>, Gojko Adzic, a talk at JavaZone 2012</li>
</ol><br><br><p style="text-align:center;"><em>You might enjoy also other <a href="/tag/opinion/">posts on effective development</a>.</em></p><br><br><div class="linkscent-iconblock" style="float:none !important;border:0 solid #ff0000 !important;background:none repeat scroll center center transparent !important;width:auto !important;height:auto !important;display:block !important;overflow:visible !important;position:static !important;text-indent:0 !important;z-index:auto !important;max-width:none !important;min-width:0 !important;max-height:none !important;min-height:0 !important;left:auto !important;top:auto !important;bottom:auto !important;right:auto !important;line-height:16px !important;white-space:nowrap !important;margin:0!important;padding:0!important;"><img class="linkscent-icon" style="float:none !important;border:0 solid #ff0000 !important;width:16px !important;height:16px !important;display:none;overflow:visible !important;position:absolute !important;text-indent:0 !important;z-index:2147483635 !important;max-width:none !important;min-width:0 !important;max-height:none !important;min-height:0 !important;left:406px;top:231px;bottom:auto !important;right:auto !important;line-height:16px !important;white-space:nowrap !important;visibility:hidden;background:url('http://concordion.org/favicon.ico') no-repeat scroll center center transparent !important;opacity:0;margin:0;padding:0!important;" src="//interclue/content/cluecore/skins/default/pixel.gif" alt="" /><img class="linkscent-icon" style="float:none !important;border:0 solid #ff0000 !important;background:none repeat scroll center center transparent;width:16px !important;height:16px !important;display:none;overflow:visible !important;position:absolute !important;text-indent:0 !important;z-index:2147483635 !important;max-width:none !important;min-width:0 !important;max-height:none !important;min-height:0 !important;left:424px;top:231px;bottom:auto !important;right:auto !important;line-height:16px !important;white-space:nowrap !important;visibility:hidden;opacity:0;margin:0;padding:0!important;" src="//interclue/content/cluecore/skins/default/pixel.gif" alt="" /><img class="linkscent-icon" style="float:none !important;border:0 solid #ff0000 !important;width:16px !important;height:16px !important;display:none;overflow:visible !important;position:absolute !important;text-indent:0 !important;z-index:2147483635 !important;max-width:none !important;min-width:0 !important;max-height:none !important;min-height:0 !important;left:251px;top:778px;bottom:auto !important;right:auto !important;line-height:16px !important;white-space:nowrap !important;visibility:hidden;background:url('http://cuke4ninja.com/favicon.ico') no-repeat scroll center center transparent !important;opacity:0;margin:0;padding:0!important;" src="//interclue/content/cluecore/skins/default/pixel.gif" alt="" /><img class="linkscent-icon" style="float:none !important;border:0 solid #ff0000 !important;background:url('//interclue/content/cluecore/skins/default/sprites.png') no-repeat scroll -48px -96px transparent;width:16px !important;height:16px !important;display:none;overflow:visible !important;position:absolute !important;text-indent:0 !important;z-index:2147483635 !important;max-width:none !important;min-width:0 !important;max-height:none !important;min-height:0 !important;left:269px;top:778px;bottom:auto !important;right:auto !important;line-height:16px !important;white-space:nowrap !important;visibility:hidden;opacity:0;margin:0;padding:0!important;" src="//interclue/content/cluecore/skins/default/pixel.gif" alt="" width="16" height="16" /><img class="linkscent-icon" style="float:none !important;border:0 solid #ff0000 !important;background:none repeat scroll center center transparent;width:16px !important;height:16px !important;display:none;overflow:visible !important;position:absolute !important;text-indent:0 !important;z-index:2147483635 !important;max-width:none !important;min-width:0 !important;max-height:none !important;min-height:0 !important;left:287px;top:778px;bottom:auto !important;right:auto !important;line-height:16px !important;white-space:nowrap !important;visibility:hidden;opacity:0;margin:0;padding:0!important;" src="//interclue/content/cluecore/skins/default/pixel.gif" alt="" /></div><br><br><div class="linkscent-iconblock" style="float:none !important;border:0 solid #ff0000 !important;background:none repeat scroll center center transparent !important;width:auto !important;height:auto !important;display:block !important;overflow:visible !important;position:static !important;text-indent:0 !important;z-index:auto !important;max-width:none !important;min-width:0 !important;max-height:none !important;min-height:0 !important;left:auto !important;top:auto !important;bottom:auto !important;right:auto !important;line-height:16px !important;white-space:nowrap !important;margin:0!important;padding:0!important;"><img class="linkscent-icon" style="float:none !important;border:0 solid #ff0000 !important;width:16px !important;height:16px !important;display:none;overflow:visible !important;position:absolute !important;text-indent:0 !important;z-index:2147483635 !important;max-width:none !important;min-width:0 !important;max-height:none !important;min-height:0 !important;left:170px;top:321px;bottom:auto !important;right:auto !important;line-height:16px !important;white-space:nowrap !important;visibility:hidden;background:url('http://concordion.org/favicon.ico') no-repeat scroll center center transparent !important;opacity:0;margin:0;padding:0!important;" src="//interclue/content/cluecore/skins/default/pixel.gif" alt="" /><img class="linkscent-icon" style="float:none !important;border:0 solid #ff0000 !important;background:none repeat scroll center center transparent;width:16px !important;height:16px !important;display:none;overflow:visible !important;position:absolute !important;text-indent:0 !important;z-index:2147483635 !important;max-width:none !important;min-width:0 !important;max-height:none !important;min-height:0 !important;left:188px;top:321px;bottom:auto !important;right:auto !important;line-height:16px !important;white-space:nowrap !important;visibility:hidden;opacity:0;margin:0;padding:0!important;" src="//interclue/content/cluecore/skins/default/pixel.gif" alt="" /><img class="linkscent-icon" style="float:none !important;border:0 solid #ff0000 !important;width:16px !important;height:16px !important;display:none;overflow:visible !important;position:absolute !important;text-indent:0 !important;z-index:2147483635 !important;max-width:none !important;min-width:0 !important;max-height:none !important;min-height:0 !important;left:568px;top:29px;bottom:auto !important;right:auto !important;line-height:16px !important;white-space:nowrap !important;visibility:hidden;background:url('//interclue/content/cluecore/skins/default/linkscentExternal.png') no-repeat scroll center center transparent !important;opacity:0;margin:0;padding:0!important;" src="//interclue/content/cluecore/skins/default/pixel.gif" alt="" /><img class="linkscent-icon" style="float:none !important;border:0 solid #ff0000 !important;background:none repeat scroll center center transparent;width:16px !important;height:16px !important;display:none;overflow:visible !important;position:absolute !important;text-indent:0 !important;z-index:2147483635 !important;max-width:none !important;min-width:0 !important;max-height:none !important;min-height:0 !important;left:586px;top:29px;bottom:auto !important;right:auto !important;line-height:16px !important;white-space:nowrap !important;visibility:hidden;opacity:0;margin:0;padding:0!important;" src="//interclue/content/cluecore/skins/default/pixel.gif" alt="" /></div><br><br><div class="linkscent-iconblock" style="float:none !important;border:0 solid #ff0000 !important;background:none repeat scroll center center transparent !important;width:auto !important;height:auto !important;display:block !important;overflow:visible !important;position:static !important;text-indent:0 !important;z-index:auto !important;max-width:none !important;min-width:0 !important;max-height:none !important;min-height:0 !important;left:auto !important;top:auto !important;bottom:auto !important;right:auto !important;line-height:16px !important;white-space:nowrap !important;margin:0!important;padding:0!important;"><img class="linkscent-icon" style="float:none !important;border:0 solid #ff0000 !important;width:16px !important;height:16px !important;display:none;overflow:visible !important;position:absolute !important;text-indent:0 !important;z-index:2147483635 !important;max-width:none !important;min-width:0 !important;max-height:none !important;min-height:0 !important;left:185px;top:1185px;bottom:auto !important;right:auto !important;line-height:16px !important;white-space:nowrap !important;visibility:hidden;background:url('http://concordion.org/favicon.ico') no-repeat scroll center center transparent !important;opacity:0;margin:0;padding:0!important;" src="//interclue/content/cluecore/skins/default/pixel.gif" alt="" /><img class="linkscent-icon" style="float:none !important;border:0 solid #ff0000 !important;background:none repeat scroll center center transparent;width:16px !important;height:16px !important;display:none;overflow:visible !important;position:absolute !important;text-indent:0 !important;z-index:2147483635 !important;max-width:none !important;min-width:0 !important;max-height:none !important;min-height:0 !important;left:203px;top:1185px;bottom:auto !important;right:auto !important;line-height:16px !important;white-space:nowrap !important;visibility:hidden;opacity:0;margin:0;padding:0!important;" src="//interclue/content/cluecore/skins/default/pixel.gif" alt="" /><img class="linkscent-icon" style="float:none !important;border:0 solid #ff0000 !important;width:16px !important;height:16px !important;display:none;overflow:visible !important;position:absolute !important;text-indent:0 !important;z-index:2147483635 !important;max-width:none !important;min-width:0 !important;max-height:none !important;min-height:0 !important;left:257px;top:1223px;bottom:auto !important;right:auto !important;line-height:16px !important;white-space:nowrap !important;visibility:hidden;background:url('http://vimeo.com/favicon.ico') no-repeat scroll center center transparent !important;opacity:0;margin:0;padding:0!important;" src="//interclue/content/cluecore/skins/default/pixel.gif" alt="" /><img class="linkscent-icon" style="float:none !important;border:0 solid #ff0000 !important;background:none repeat scroll center center transparent;width:16px !important;height:16px !important;display:none;overflow:visible !important;position:absolute !important;text-indent:0 !important;z-index:2147483635 !important;max-width:none !important;min-width:0 !important;max-height:none !important;min-height:0 !important;left:275px;top:1223px;bottom:auto !important;right:auto !important;line-height:16px !important;white-space:nowrap !important;visibility:hidden;opacity:0;margin:0;padding:0!important;" src="//interclue/content/cluecore/skins/default/pixel.gif" alt="" /></div>
++++
