{:title
 "Profiling Tomcat Webapp with VisualVM and NetBeans - Pitfalls",
 :date "2012-02-25",
 :layout :post,
 :tags ["java" "performance"],
 :tags-orig ["java" "performance" "profiling"],
 :categories ["Languages" "Tools"],
 :extra-css #{}
}

++++
Profiling a webapp running on Tomcat with VisualVM or NetBeans wasn't as easy as expected, so this is a brief record of what to avoid to succeed.<br><br>Environment: Mac OS X, Java JDK 1.6.0_29, Netbeans 7.1, VisualVM 1.3.3 (installed separately), Tomcat 6.
<h2>The Pitfalls:</h2>
VisualVM
<ul>
	<li>VisualVM Sampler and Profiler: <strong>To be able to drill down to the slow methods you need to take a snapshot before you stop the sampling/profiling</strong> (there is a [Snapshot] button above the Hot Spots list). This is not very intuitive and the interface doesn't communicate it.</li>
	<li>VisualVM Profiler: Excludes Thread.sleep() &amp; Object.wait() time (as opposed to the NetBeans profiler where you can choose to include/exclude them) =&gt; if you method is spending lot of time waiting for a lock, you won't discover it</li>
	<li>You might need to allow unsafe, passwordless JMX connections in your Tomcat config, see Resources</li>
</ul>
NetBeans Profiler
<ul>
	<li>While VisualVM was able to dynamically connect to my Tomcat, NetBeans wasn't able to do it and hasn't provided any notification about the failure. The only visible manifestation was that it wasn't showing and collecting any data. Solution: Use the "Direct" attach invocation, i.e. starting the target java application with the NetBeans profiling agentlib.</li>
</ul>
<h2>Tools Overview</h2>
<h3>VisualVM</h3>
Extremely useful tool, included in JDK since 6.0 (command line: jvisualvm) or on the <a href="https://visualvm.java.net/">VisualVM page</a>.
<ul>
	<li>Automatically discovers local Java processes and can connect to them (if they run Java 6+)</li>
	<li>Monitoring - threads, heap, permgen, CPU, classes</li>
	<li>Sampler - low-overhead profiling tool (takes thread snapshot at regular intervals and compares their stack traces to find out where most time is spent)</li>
	<li>Plugins, such as MBeans, Tracers</li>
	<li>Profiler - a simpler version of NetBeans profiler (<a href="https://blogs.oracle.com/nbprofiler/entry/profiling_with_visualvm_part_2">comparison here</a>); it can dynamically attach to running (Java 6+) processes and instrument classes on-the-fly. The not very visible checkbox <em>Settings</em> in the right-top corner can be used to set the classes to start profiling from (syntax: my.package.** to include subpackages or my.package.* or my.pkg.MyClass) and the packages not to / only to profile (syntax differs here:Â my.package.* to include subpackages or my.package. or my.pkg.).</li>
</ul>
<h2>Resources</h2>
<ul>
	<li>Experience :-)</li>
	<li><a href="https://blogs.oracle.com/nbprofiler/entry/profiling_with_visualvm_part_1">Profiling With VisualVM, Part 1</a> (6/2008) and <a href="https://blogs.oracle.com/nbprofiler/entry/profiling_with_visualvm_part_2">Part 2</a>, including comparison with the full NB profiler</li>
	<li><a href="https://mballantyne.blogspot.com/2011/05/profiling-tomcat-with-visualvm-on-mac.html">Profiling Tomcat with VisualVM on Mac OS X</a> - including JMX setup in Tomcat</li>
</ul>
<div class="linkscent-iconblock" style="float:none !important;border:0 solid #ff0000 !important;background:none repeat scroll center center transparent !important;width:auto !important;height:auto !important;display:block !important;overflow:visible !important;position:static !important;text-indent:0 !important;z-index:auto !important;max-width:none !important;min-width:0 !important;max-height:none !important;min-height:0 !important;left:auto !important;top:auto !important;bottom:auto !important;right:auto !important;line-height:16px !important;white-space:nowrap !important;margin:0!important;padding:0!important;"><img class="linkscent-icon" style="float:none !important;border:0 solid #ff0000 !important;width:16px !important;height:16px !important;display:none;overflow:visible !important;position:absolute !important;text-indent:0 !important;z-index:2147483635 !important;max-width:none !important;min-width:0 !important;max-height:none !important;min-height:0 !important;left:589px;top:445px;bottom:auto !important;right:auto !important;line-height:16px !important;white-space:nowrap !important;visibility:hidden;background:url('http://visualvm.java.net/favicon.ico') no-repeat scroll center center transparent !important;opacity:0;margin:0;padding:0!important;" src="//interclue/content/cluecore/skins/default/pixel.gif" alt="" /><img class="linkscent-icon" style="float:none !important;border:0 solid #ff0000 !important;background:none repeat scroll center center transparent;width:16px !important;height:16px !important;display:none;overflow:visible !important;position:absolute !important;text-indent:0 !important;z-index:2147483635 !important;max-width:none !important;min-width:0 !important;max-height:none !important;min-height:0 !important;left:607px;top:445px;bottom:auto !important;right:auto !important;line-height:16px !important;white-space:nowrap !important;visibility:hidden;opacity:0;margin:0;padding:0!important;" src="//interclue/content/cluecore/skins/default/pixel.gif" alt="" /></div>

++++
