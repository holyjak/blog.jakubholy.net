{:title "Java: Simulating various connection problems with Toxiproxy",
 :date "2018-11-26",
 :layout :post,
 :tags ["java"],
 :tags-orig ["java"],
 :categories ["Languages"],
 :extra-css
 #{"https://github.githubassets.com/assets/gist-embed-123720f37c57ce9a8f29de081c38ed61.css"}}

++++
<!-- wp:embed {"url":"https://gist.github.com/holyjak/f3f995173539be80ce518a579496c2ba","type":"rich","providerNameSlug":"","className":""} -->
<figure class="wp-block-embed is-type-rich"><div id="gist93244117" class="gist">
    <div class="gist-file">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-readme-md" class="file">
    
  <div id="file-readme-md-readme" class="Box-body readme blob instapaper_body js-code-block-container">
    <article class="markdown-body entry-content p-5" itemprop="text"><h1><a id="user-content-java-simulating-various-connection-problems-with-toxiproxy" class="anchor" aria-hidden="true" href="#java-simulating-various-connection-problems-with-toxiproxy"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Java: Simulating various connection problems with Toxiproxy</h1>
<p>Simulate various connection issues with <a href="http://toxiproxy.io" rel="nofollow">Toxiproxy</a> and Java's <code>HttpURLConnection</code>
to see what kind of errors get produced: connect timed out vs. read timed out vs. connection refused ... .</p>
<h2><a id="user-content-results" class="anchor" aria-hidden="true" href="#results"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Results:</h2>
<p>System: openjdk 11.0.1 2018-10-16</p>
<ol>
<li><code>(.setConnectTimeout 1)</code> =&gt;  java.net.SocketTimeoutException: connect timed out</li>
<li><code>(.setReadTimeout 1)</code>    =&gt;  <code>javax.net.ssl.SSLProtocolException: Read timed out</code> on HTTPS, <code>java.net.SocketTimeoutException: Read timed out</code> on HTTP
(or Toxiproxy with 5s latency or timeout )</li>
<li>Nothing listening at the port =&gt; java.net.ConnectException: Connection refused</li>
<li>Toxiproxy with no upstream configured (i.e. the port is open, but nothing happesn with the connection)
=&gt; <code>javax.net.ssl.SSLHandshakeException: Remote host terminated the handshake</code> on HTTPS, <code>java.net.SocketTimeoutException: Read timed out</code> on HTTP</li>
<li>limit_data_downstream =&gt; java.io.IOException: Premature EOF</li>
</ol>
<p>(What I haven't been able to simulate (yet) is "connection interrupted/broken", i.e. <code>java.net.SocketException Connection reset</code> (perhaps you closed it and try to write to it anyway?) and <code>java.net.SocketException Connection reset by peer</code> (perhaps when dropped by a firewall/the server/...?).)</p>
<h2><a id="user-content-the-setup" class="anchor" aria-hidden="true" href="#the-setup"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>The setup</h2>
<h3><a id="user-content-prerequisities" class="anchor" aria-hidden="true" href="#prerequisities"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Prerequisities</h3>
<p>To <code>/etc/hosts</code> add:</p>
<pre><code>127.0.0.1       proxied.google.com
</code></pre>
<h3><a id="user-content-the-toxiproxy-setup" class="anchor" aria-hidden="true" href="#the-toxiproxy-setup"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>The toxiproxy setup</h3>
<p>Start toxiproxy:</p>
<pre><code>docker pull shopify/toxiproxy
# BEFORE we `run` it: case #3
docker run --rm -p 5555:5555 -p 6666:6666 -p 8474:8474 --name toxiproxy -it shopify/toxiproxy
</code></pre>
<p>Configure it (we could just POST to <code>:8474</code> but using the CLI is easier):</p>
<pre><code>$ docker exec -it toxiproxy /bin/sh
/ # cd /go/bin/
# ./toxiproxy-cli create google -l 0.0.0.0:6666 -u www.google.com:443 # BEFORE this is run: case #4
# ./toxiproxy-cli toxic add google -t latency -a latency=5000 # case #2
Added downstream latency toxic 'latency_downstream' on proxy 'google
# ./toxiproxy-cli toxic remove google -n latency_downstream
Removed toxic 'latency_downstream' on proxy 'google'

# ./toxiproxy-cli toxic add google -t  timeout -a timeout=2000 # case #2
Added downstream timeout toxic 'timeout_downstream' on proxy 'google'
# ./toxiproxy-cli toxic remove google -n timeout_downstream
Removed toxic 'timeout_downstream' on proxy 'google'

# ./toxiproxy-cli toxic add google -t limit_data -a bytes=5000 # case #5
Added downstream limit_data toxic 'limit_data_downstream' on proxy 'google'
</code></pre>
<h3><a id="user-content-the-test-code" class="anchor" aria-hidden="true" href="#the-test-code"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>The test code</h3>
<div class="highlight highlight-source-clojure"><pre>(<span class="pl-k">import</span> '[java.net URL HttpURLConnection])
(<span class="pl-en">-&gt;</span>
  (<span class="pl-en">doto</span> ^HttpURLConnection (<span class="pl-en">.openConnection</span> (<span class="pl-en">URL.</span> <span class="pl-s"><span class="pl-pds">"</span>https://proxied.google.com:6666/<span class="pl-pds">"</span></span>))
    <span class="pl-c"><span class="pl-c">;</span>; BEWARE: JVM *must* be started with `-Dsun.net.http.allowRestrictedHeaders=true` to allow setting the Host:</span>
    (<span class="pl-en">.setRequestProperty</span> <span class="pl-s"><span class="pl-pds">"</span>Host<span class="pl-pds">"</span></span> <span class="pl-s"><span class="pl-pds">"</span>www.google.com<span class="pl-pds">"</span></span>)
    (<span class="pl-en">.setConnectTimeout</span> <span class="pl-c1">1000</span>)
    (<span class="pl-en">.setReadTimeout</span> <span class="pl-c1">1000</span>))
  (<span class="pl-en">.getInputStream</span>)
  slurp)</pre></div>
<h3><a id="user-content-background" class="anchor" aria-hidden="true" href="#background"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Background</h3>
<p>Read my <a href="https://theholyjava.wordpress.com/2017/05/09/simulating-network-timeouts-with-toxiproxy/" rel="nofollow">Simulating network timeouts with toxiproxy</a>
to learn why we need to bother with <code>/etc/hosts</code> and the <code>Host</code> header.</p>
</article>
  </div>

  </div>
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/holyjak/f3f995173539be80ce518a579496c2ba/raw/95fa4ea0c886c7732f7f61dba64a6c145077a2e4/README.md" style="float:right">view raw</a>
        <a href="https://gist.github.com/holyjak/f3f995173539be80ce518a579496c2ba#file-readme-md">README.md</a>
        hosted with &#10084; by <a href="https://github.com">GitHub</a>
      </div>
    </div>
</div>

</div></figure>
<!-- /wp:embed -->
++++
