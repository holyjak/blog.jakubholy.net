{:title "My year 2022 in review"
:tags []
:category "General"
:date "2022-12-31"}

2022 has been a busy year both geopolitically ‚ù§Ô∏èüá∫üá¶ and locally. I have done a ton of Fulcro, played with Rust, got into managing projects and people.

This is my first whole year in https://ardoq.com/[Ardoq] and I am still loving it. I came to fullfil my dream of being full-time Clojure developer and (aside of that, because I still love Clojure!) I am staying for the friendly, open "big family" culture and awesome people. I started the year by working on our slow, stepwise transition from Mongo to Postgres (I still might one day write about why we sadly did not pick Datomic in the end üò≠). It was an important and exciting task. As changing the DB your business is built on, while everything keeps running, always is. Later I took over one of our teams, helping it deliver faster, smaller, more frequently. I have also been pulled into hiring and people management, which is not as much fun as Clojure but is far more important. I still have a great deal to learn here.

I love Clojure (haven't I mentioned that already?) but I also love to learn and want to be able to do stuff where Clojure is not suitable. So I have picked up Rust again, and this time actually started coding a small https://github.com/holyjak/img-mg[desktop photo manager]. It inspired me to hold a lightning talk about how I want all software to be written in Rust (and this safer and economical with resources) but never want to write any business application in it üòÖ (because you have to deal with many technicalities rather than just the business). The work on my app has stalled somewhat when I discovered that despite Rust's top notch performance, rendering 20-50 photos on the screen quickly might be impossible, at least without some smart hacks. But I hope to get back to it, when time permits...

### Writing

I have written a couple of blog posts this year, primarily about Fulcro:

* link:/2022/language-of-simplicity/[First craft a language then build your software] - my the deepest and most important piece of writing this year, continuing to explore my beloved topic of productivity and link:/2021/simplicity/[simplicity in programming]
* link:/2022/fulcro-detached-root-component/[Fulcro Lesson: Detached Root Component (Form)]
* link:/2022/trinity-of-clojure/[Clojure is in fact a trinity - of language, interactive development, and structural editing] - learning tip for newcomers
* link:/2022/postgres-json-to-table-and-back/[PostgreSQL: From JSON to table and back] - update the value of a jsonb column based on its content in pure SQL
* link:/2022/git-commit-signature-with-1password/[Signing git commits with a ssh key using 1Password]
* link:/2022/forward-ref-in-fulcro/[Using React.forwardRef in Fulcro (and rendering a Fulcro component from a JS one)]
* link:/2022/trouble-with-lists-in-fulcro/[The trouble with list components in Fulcro] - why you might not a <something>List component and what to do if you really want one
* link:/2022/code-study-making-it-functional/[Code Study: Making code more functional] - getting rid of low-level state management in a function

In December 2021 I have also started https://blog.jakubholy.net/me/subscribe/[my Holy Dev newsletter] with gems from the wider web and few words about what is going on in my open source and other efforts. So it has its birthday now üéÇ! My readers learned about Clojure, Rust, WASM, software development, interesting tools, with a little fun mixed in between. You can find all the links I post there also at the https://holyjak.tumblr.com/[Holy Dev Tumblr] feed. Some of the highlights from the gems are Chris Houser's talk https://www.youtube.com/watch?v=zp0OEDcAro0[Condition Systems in an Exceptional Language] and the article https://chreke.com/little-languages.html[Little Languages Are The Future Of Programming].

### Fulcro

I have discovered https://github.com/quoll/asami[Asami], Paula's in-memory / on-disk graph database somewhat similar to Datomic. It seemed as a good fit for small webapps without scaling needs and I have thus created https://github.com/holyjak/fulcro-rad-asami[Fulcro RAD Asami] plugin to make it possible to use it with Fulcro Rapid Application Development. Paula was super nice and very helpful. I am currently building a small ERP with fulcro-rad-asami for a friend.

I have also held my https://github.com/holyjak/fulcro-intro-wshop[Fulcro introduction workshop] online and at NDC Oslo (there together with my https://github.com/holyjak/interactive-dev-wshop[Introduction to interactive development]). There is enough interest in Fulcro and I wanted to repeat the workshop but somehow did not find the time. Next year!

I have also had 9 awesome https://holyjak.cz/holy-dev.html[mentoring clients], who I have helped with their Fulcro projects. I love to do it because it feels great to help people and because it always shows me ways to make Fulcro more accessible. So thank you all!

Lastly, I have prepared the talk _Unscaryfying Fulcro -
the web framework you didn‚Äôt know you needed_ but so far have not managed to "sell" it to a Clojure conference. I think it would be awesome so fingers crossed for 2023!

### Interesting tooling

I continue expanding my use of Babashka, which is awesome and getting ever more powerful. Scripting in Clojure is so much better than bash! I am also trying to get more productive with https://github.com/djblue/portal[Portal], which fits nicely into my IDE thanks to its plugin. I have also discovered https://github.com/jpmonettas/flow-storm-debugger[Flow-storm debugger], which has helped me a few times and is absolutely a tool to have in your belt.

I have also adopted https://www.warp.dev/[Warp] as my terminal, replacing iTerm.

### Other

I have contributed a few improvements to the Clojure DB migration tool https://github.com/weavejester/ragtime[ragtime] and of course to the Fulcro family of libraries.

// Newsletter is new???
//  \- highlights incl. little langs
