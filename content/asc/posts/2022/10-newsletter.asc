{:title "Holy Dev Newsletter October 2022"
 :hide-from-home? true
 :date "2022-10-31"
 :tags ["newsletter"]}

Welcome to the Holy Dev newsletter, which brings you gems I found on the web, updates from my blog, and a few scattered thoughts. You can get the next one into your mailbox if you link:/me/subscribe[subscribe]. Sorry for the delay in publishing this edition, I was having too much fun with Rust.

== What is happening
Not much. I have experimented a little more with https://github.com/holyjak/img-mg[img-mg] and found out that showing previews of many photos as quickly as I want might not be possible even with Rust. I have also small patch to the Ragtime DB migration library to https://github.com/weavejester/ragtime/pull/154[make it respect Thread.isInterrupted] and stop, which we use to gracefully stop all jobs when we are about to restart the app.
I am also exploring using https://github.com/djblue/portal[Portal] as a production troubleshooting tool, that enables developers to navigate data and trigger functions, as a safer alternative to a full REPL access. I'll keep you posted.

== Gems from the world wide web
++++
<p><span class="link">üëì <a href="https://blog.cloudflare.com/mitigating-spectre-and-other-security-threats-the-cloudflare-workers-security-model/">Mitigating Spectre and Other Security Threats: The Cloudflare Workers Security Model</a> [security]</span><br /><span style="white-space: pre-line;">A fascinating read about how Cloudflare makes its Workers function as a service platform secure by disabling file system and network access, forcing all communication over a Unix socket and through a proxy and about its multilayer defense against known and unknown Specter attacks. </span></p><p><span class="link">üëì <a href="https://dylanbeattie.net/music/">Dylan Beattie's musical parodies of developers' lives</a> [fun]</span><br /><span style="white-space: pre-line;">Very entertaining songs & musical performances inspired by developers' lives. A ballad about a bad C developer who did not free his mallocs and is still sitting in the cellar trying to debug the system and such ü§£</span></p><p><span class="link">üëì <a href="https://talonvoice.com/">Talon - write code with your voice (for when hands fail you)</a> [accessibility, tool]</span><br /><span style="white-space: pre-line;">A free, cross-OS, programmable application that enables you to write code and control your computer with voice. It asks have surprisingly accurate eye tracking for moving the mouse. Demonstrated to us by a user at a conference. Of course slower than writing but great when your cannot write. </span></p><p><span class="link">üëì <a href="https://postgresml.org/blog/postgresml-is-moving-to-rust-for-our-2.0-release/#ensuring-high-quality-rust-implementations">PostgresML is Moving to Rust for our 2.0 Release - PostgresML</a> [rust, machine learning, tool, library]</span><br /><span style="white-space: pre-line;">PostgresML is replacing most of Python with Rust for v 2.0. in its ML extension for Postgres because it is up to 10-30x faster in some cases. The Rust ML ecosystem is young and under development but already provides good value. Moreover lot of ML libraries are actually implemented in C/++ and only used by Python, so they can just add well be used from Rust. Interestingly the time to move data between Pg and NumPy data structures might dominate the algorithm time so using Rust is another win here.</span><br /><span style="white-space: pre-line;">They mention tw Rust ML projects: Linfa is a comprehensive toolkit for statistical learning, providing algorithms for optimal model and density estimation.</span><br /><span style="white-space: pre-line;">It contains common learning algorithms such as Elastic Net, Support Vector Machines, Kernel Methods, Linear Decision Trees, etc. and bundles them together. SmartCore is a comprehensive library for machine learning and numerical computing. The library provides a set of tools for linear algebra, numerical computing, optimization, and enables a generic, powerful yet still efficient approach to machine learning.</span></p><p><span class="link">üëì <a href="https://aembit.io/blog/why-we-chose-rust">Why We Chose Rust - a balanced report</a> [rust, experience]</span><br /><span style="white-space: pre-line;">Summary:</span><br /><span style="white-space: pre-line;">If we were starting over again, would we have used Rust again? We're still not sure. While we are glad we picked Rust instead of C++ for our memory peace of mind, we still wonder whether Go may have been sufficient for our purposes. Go seems to address all of the challenges listed:</span><br /><span style="white-space: pre-line;">1. It has a much simpler learning curve.</span><br /><span style="white-space: pre-line;">2. It is easier to find programmers that have deep experience with it.</span><br /><span style="white-space: pre-line;">3. Its garbage collection means dramatically easier rearchitecting.</span><br /><span style="white-space: pre-line;">Regarding 3.: In our experience, heavily rearchitecting a design in a Rust codebase can be agonizing. Rust's strict rules to support safety without garbage collection force you to adhere to Rust-friendly architecture. As a team, we have not yet developed the experience with Rust to foresee what is cleanly implementable in Rust and what isn't. </span></p><p><span style="white-space: pre-line;"><em>57 CSS shapes examples - CSS Scan</em><br /></span><br /><span style="white-space: pre-line;"><a href="https://getcssscan.com/css-shapes">https://getcssscan.com/css-shapes</a></span><br /><span style="white-space: pre-line;">CSS for 57 different shapes from basic ones up to checkmark, yin/yang symbol, octagon, cylinder, and such.</span></p><p><span class="link">üëì <a href="https://shinesolutions.com/2018/01/08/falsehoods-programmers-believe-about-names-with-examples/">Falsehoods Programmers Believe About Names - With Examples - Shine Solutions Group</a></span><br /><span style="white-space: pre-line;">Such as People have exactly one canonical full name. People have exactly N names, for any value of N. People‚Äôs names fit within a certain defined amount of space. People‚Äôs names do not change. People‚Äôs names are written in ASCII.</span></p><p><span class="link">üëì <a href="https://www.epicweb.dev/the-webs-next-transition">The Web‚Äôs Next Transition</a> [webdev, trends, framework]</span><br /><span style="white-space: pre-line;">A good analysis of how our approach to creating web apps developed and where we are going now. There is an explanation and pros & cons for each of them:</span><ol><li>Multi-Page Apps (MPAs)</li><li>Progressively Enhanced Multi-Page Apps (PEMPAs, aka ‚ÄúJavaScript Sprinkles‚Äù)</li><li>Single Page Apps (SPAs)</li><li>Coming: Progressively Enhanced Single Page Apps (PESPAs)</li></ol><span style="white-space: pre-line;">The currently popular SPAs lead to huge bundle sizes, slow loading due to request waterfalls, and complex state management on the client side.</span><br /><span style="white-space: pre-line;">Progressively Enhanced Single Page Apps return to the simple mental model of MPAs - the application works even without JavaScript. To improve UX, user action (click/submit) are captured and sent over fetch instead and the server returns the new HTML - but it can be for just a part of the page (contrary to MPAs' full page reload). An example solution in this space is <a href="https://remix.run/">Remix</a>.</span></p><p><span class="link">üëì <a href="https://css-tricks.com/gifs-without-the-gif-the-most-performant-image-and-video-options-right-now/">GIFs Without the .gif: The Most Performant Image and Video Options Right Now | CSS-Tricks - CSS-Tricks</a> [webdev, media] - <q>So you want an auto-playing looping video without sound? In popular vernacular this is the very meaning of the word GIF. The word has stuck </q></span><br /><span style="white-space: pre-line;">Multiple good options with pros & s. You can use <video> with options for autoplay, looping, muted. Use multiple source elements to offer alternatives to browser that do not support the latest and greatest format yet. There is also animated webp and avif and JS solutions.</span><br /><span style="white-space: pre-line;">Also a good overview of the current best image & video formats and their support.</span><br /><span style="white-space: pre-line;"><strong>Containers: </strong>MP4 (since 2001) is supported by all web browsers. WebM¬†(since 2010) works in all browsers except for iOS Safari (which added supert for WebM audio in 2021 so perhaps video is coming too). </span><br /><span style="white-space: pre-line;"><strong>Codecs:</strong> H.264¬†works in all browsers. VP9 is supported by all the browsers that support WebM. The newer and best AV1 codec has been supported in Chrome since 2018 and Firefox since 2019. It has¬†not yet shipped¬†in Edge or Safari.</span><br /><span style="white-space: pre-line;"><strong>Images</strong>: WebP (which can be animated) is now twelve years old. The more modern AV1 Image File Format (AVIF), released in 2019, is the best image format¬†for most use cases¬†on the Web but it's support varies - eg. Firefox doesn't support animated avif yet.</span></p><p><span class="link">üëì <a href="https://pyrsia.io/">The Decentralized Package Network | Pyrsia.io</a> [security]</span><br /><span style="white-space: pre-line;">Pyrsia is an open-source, decentralised package network supported by major companies to fight supply chain attacks by building the packages itself from source and keeping them in a distributed network with a single point of control. Currently building support for Docker images and Maven artifacts, but planning to support all common packages and to integrate seamlessly with your existing package manager.</span><br /><span style="white-space: pre-line;">The network consists of build nodes that build and sign the artifacts and regular nodes that form the entry point to the network for build tools. Both type of nodes participate in the peer-to-peer distribution of artifacts.</span><br /><span style="white-space: pre-line;">Pyrsia solves two problems: There is no way for you to verify the binary artifact is in fact the result of the given source so one malicious entity with publication access to a central repository can publish anything it wants. A central repository is controlled by a single entity, which could take decisions you do not agree with (eg retract a package).</span><br /><span style="white-space: pre-line;">Pyrsia is driven by leading companies in the software industry and a prospective project of the OpenSSF. Learn more about how our works at <a href="https://pyrsia.io/docs/tutorials/what_is_pyrsia/">What is Pyrsia?</a></span></p><p><span class="link">üëì <a href="https://www.jetpack.io/devbox/">Devbox by Jetpack.io | Devbox</a> [productivity, terminal]</span><br /><span style="white-space: pre-line;">Create an isolated shell for your project with just the OS-level dependencies it needs via the power of Nix (without needing to learn Nix). You can then pack your project into a Docker container without dealing with dockerfiles.</span><br /><span style="white-space: pre-line;">Pros: everybody gets a shell worth the correct dependencies (and versions) without affecting your global env. Cons: All the code still runs on your machine so not suitable if you do not trust it.</span></p><p><span class="link">üëì <a href="https://restic.net/">restic ¬∑ Backups done right!</a> [backup, terminal, tool, devops]</span><br /><span style="white-space: pre-line;">Restic is a modern, open source backup program that can back up your files from¬†<strong>Linux, BSD, Mac and Windows </strong>to¬†<strong>many different storage types</strong>, including self-hosted and online services. It's a single executable that you can run without a server or complex setup. It's effective - only transferring the parts that actually changed in the files you back up. It aims for security  by careful use of cryptography in every part of the process. It's easy to check that the files can be restored. </span></p><p><span class="link">üëì <a href="https://www.meilisearch.com/">Meilisearch</a> [tool]</span><br /><span style="white-space: pre-line;">Search as you type, typo-tolerant, customizable, supports multi-tenancy and fine-grained access control. Rest API. I haven't tried it but some users seem quite happy about it. Open-source, beta cloud option. </span></p>
++++

+++--+++

Thank you for reading!
